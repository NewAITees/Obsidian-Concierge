{
  "directory": ".",
  "timestamp": "2025-04-09T21:36:39.530131",
  "file_count": 48,
  "files": {
    "obsidian_concierge/__init__.py": {
      "file_path": "obsidian_concierge/__init__.py",
      "timestamp": "2025-04-09T21:36:39.532301",
      "structure": "# __init__.py の解析結果\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": true,
        "issues": []
      }
    },
    "snippet/__init__.py": {
      "file_path": "snippet/__init__.py",
      "timestamp": "2025-04-09T21:36:39.534800",
      "structure": "# __init__.py の解析結果\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": true,
        "issues": []
      }
    },
    "snippet/scripts/__init__.py": {
      "file_path": "snippet/scripts/__init__.py",
      "timestamp": "2025-04-09T21:36:39.536247",
      "structure": "# __init__.py の解析結果\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": true,
        "issues": []
      }
    },
    "snippet/scripts/code_complexity_checker.py": {
      "file_path": "snippet/scripts/code_complexity_checker.py",
      "timestamp": "2025-04-09T21:36:39.537611",
      "structure": "# code_complexity_checker.py の解析結果\n\n## インポート一覧\n- `ast` (✅ 使用あり)\n- `collections.defaultdict` (❌ 未使用)\n- `os` (❌ 未使用)\n- `sys` (✅ 使用あり)\n\n## クラス: `CodeComplexityChecker`\n**Docstring**: 関数の行数とネストレベルを数える簡易的なコード複雑度チェッカー\n\n### メソッド: `__init__(self: Any [✅], max_lines: Any [✅], max_nest_level: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Args:\n    max_lines: 関数の最大行数の閾値\n    max_nest_level: 最大ネストレベルの閾値\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `_count_lines(self: Any [❌], node: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: ASTノードの行数をカウント\n\n**内部で定義される名前:**\n- `_count_lines`\n\n\n### メソッド: `_get_max_nest_level(self: Any [✅], node: Any [✅], current_level: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: 最大ネストレベルを計算\n\n**内部で定義される名前:**\n- `_get_max_nest_level`\n- `child_level`\n- `max_level`\n\n\n### メソッド: `check_file(self: Any [✅], file_path: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: ファイルをチェック\n\n**内部で定義される名前:**\n- `check_file`\n- `code`\n\n\n### メソッド: `check_code(self: Any [✅], code: Any [✅], file_name: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: コード文字列をチェック\n\n**内部で定義される名前:**\n- `check_code`\n- `lines`\n- `max_nest`\n- `name`\n- `tree`\n\n\n### メソッド: `print_report(self: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: 結果レポートを表示\n\n**内部で定義される名前:**\n- `print_report`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/scripts/code_complexity_checker.py",
            "name": "CodeComplexityChecker",
            "type": "class",
            "issue": "too_long",
            "lines": 115,
            "limit": 100,
            "lineno": 7
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/scripts/code_complexity_checker.py:12: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:22: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:28: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:44: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:51: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:102: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:102: note: Use \"-> None\" if function does not return a value\nFound 6 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "snippet/scripts/check_code_quality.py": {
      "file_path": "snippet/scripts/check_code_quality.py",
      "timestamp": "2025-04-09T21:36:39.536953",
      "structure": "# check_code_quality.py の解析結果\n\n## インポート一覧\n- `pathlib.Path` (❌ 未使用)\n- `subprocess` (✅ 使用あり)\n- `sys` (✅ 使用あり)\n\n## 関数: `run_check(command: list[str] [✅], description: str [✅]) -> tuple[bool, str]` [✅ 使用あり]\n**Docstring**: コマンドを実行してチェックを行う\n\nArgs:\n    command (List[str]): 実行するコマンド\n    description (str): チェックの説明\n\nReturns:\n    Tuple[bool, str]: チェックの結果（成功したかどうか）とエラーメッセージ\n\n**内部で定義される名前:**\n- `result`\n- `run_check`\n\n\n## 関数: `main() -> int` [✅ 使用あり]\n**Docstring**: メイン関数\n\n**内部で定義される名前:**\n- `checks`\n- `failed`\n- `main`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "obsidian_concierge/services/search.py": {
      "file_path": "obsidian_concierge/services/search.py",
      "timestamp": "2025-04-09T21:36:39.534081",
      "structure": "# search.py の解析結果\n\n## インポート一覧\n- `repository.chroma.ChromaRepository` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n\n## クラス: `SearchService`\n**Docstring**: Service for handling vector-based search operations.\n\n### メソッド: `__init__(self: Any [✅], repository: ChromaRepository [✅]) -> None` [❌ 未使用]\n**Docstring**: Initialize SearchService.\n\nArgs:\n    repository: ChromaRepository instance for vector operations\n\n**内部で定義される名前:**\n- `__init__`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "obsidian_concierge/services/search.py:8: error: Skipping analyzing \"obsidian_concierge.repository.chroma\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nobsidian_concierge/services/search.py:8: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nFound 1 error in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "snippet/scripts/save_file_structure.py": {
      "file_path": "snippet/scripts/save_file_structure.py",
      "timestamp": "2025-04-09T21:36:39.545531",
      "structure": "# save_file_structure.py の解析結果\n\n## インポート一覧\n- `analyze_python_files.save_python_analysis` (✅ 使用あり)\n- `datetime` (✅ 使用あり)\n- `os` (✅ 使用あり)\n- `pathlib.Path` (✅ 使用あり)\n- `subprocess` (✅ 使用あり)\n\n## 関数: `get_ignored_patterns() -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `get_ignored_patterns`\n- `ignored_patterns`\n\n\n## 関数: `should_include(path: Any [✅], ignored_patterns: Any [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `path_str`\n- `should_include`\n\n\n## 関数: `format_file_structure(files: Any [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `connector`\n- `current`\n- `dirs`\n- `emoji`\n- `file_tree`\n- `files`\n- `format_file_structure`\n- `format_tree`\n- `is_last_dir`\n- `is_last_file`\n- `new_prefix`\n- `output`\n- `parts`\n\n\n## 関数: `save_file_structure() -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `all_files`\n- `git_files`\n- `ignored_patterns`\n- `output_dir`\n- `output_file`\n- `save_file_structure`\n\n\n## 関数: `format_tree(tree: Any [✅], prefix: Any [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `connector`\n- `dirs`\n- `emoji`\n- `files`\n- `format_tree`\n- `is_last_dir`\n- `is_last_file`\n- `new_prefix`\n- `output`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/scripts/save_file_structure.py:7: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:8: error: Need type annotation for \"ignored_patterns\" (hint: \"ignored_patterns: set[<type>] = ...\")  [var-annotated]\nsnippet/scripts/save_file_structure.py:22: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:29: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:31: error: Need type annotation for \"file_tree\"  [var-annotated]\nsnippet/scripts/save_file_structure.py:37: error: Unsupported target for indexed assignment (\"Collection[Any]\")  [index]\nsnippet/scripts/save_file_structure.py:38: error: Value of type \"Collection[Any]\" is not indexable  [index]\nsnippet/scripts/save_file_structure.py:39: error: \"Collection[Any]\" has no attribute \"append\"  [attr-defined]\nsnippet/scripts/save_file_structure.py:42: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:74: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:74: note: Use \"-> None\" if function does not return a value\nsnippet/scripts/save_file_structure.py:114: error: Cannot find implementation or library stub for module named \"analyze_python_files\"  [import-not-found]\nsnippet/scripts/save_file_structure.py:114: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nFound 11 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "snippet/snippet/validator.py": {
      "file_path": "snippet/snippet/validator.py",
      "timestamp": "2025-04-09T21:36:39.577036",
      "structure": "# validator.py の解析結果\n\n## インポート一覧\n- `datetime.datetime` (✅ 使用あり)\n- `re` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Callable` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Set` (✅ 使用あり)\n- `typing.Tuple` (✅ 使用あり)\n- `typing.Type` (✅ 使用あり)\n- `typing.Union` (✅ 使用あり)\n\n## クラス: `ValidationError` (Exception)\n**Docstring**: バリデーションエラー\n\n### メソッド: `__init__(self: Any [✅], message: str [✅], path: Optional[str] [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `__init__`\n\n\n## クラス: `Validator`\n**Docstring**: データ構造を検証するシンプルなバリデーター\n辞書やリストの構造を検証し、期待される型と実際の値を比較\n\n### メソッド: `@staticmethod validate_type(value: Any [✅], expected_type: Union[Type, Tuple[Type, ...]] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 値の型を検証\n\nArgs:\n    value: 検証する値\n    expected_type: 期待される型（タプルの場合はいずれかの型）\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 型が一致しない場合\n\n**内部で定義される名前:**\n- `actual_type_str`\n- `expected_type_str`\n- `type_names`\n- `validate_type`\n\n\n### メソッド: `@staticmethod validate_in(value: Any [✅], valid_values: List[Any] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 値が許容値リストに含まれているか検証\n\nArgs:\n    value: 検証する値\n    valid_values: 許容値のリスト\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 値が許容値に含まれない場合\n\n**内部で定義される名前:**\n- `validate_in`\n\n\n### メソッド: `@staticmethod validate_length(value: Union[str, List, Dict, Set] [✅], min_length: Optional[int] [✅], max_length: Optional[int] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 文字列、リスト、辞書、集合の長さを検証\n\nArgs:\n    value: 検証する値\n    min_length: 最小長さ（省略可）\n    max_length: 最大長さ（省略可）\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 長さが範囲外の場合\n\n**内部で定義される名前:**\n- `length`\n- `validate_length`\n\n\n### メソッド: `@staticmethod validate_range(value: Union[int, float] [✅], min_value: Optional[Union[int, float]] [✅], max_value: Optional[Union[int, float]] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 数値の範囲を検証\n\nArgs:\n    value: 検証する値\n    min_value: 最小値（省略可）\n    max_value: 最大値（省略可）\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 値が範囲外の場合\n\n**内部で定義される名前:**\n- `validate_range`\n\n\n### メソッド: `@staticmethod validate_regex(value: str [✅], pattern: str [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 文字列を正規表現でチェック\n\nArgs:\n    value: 検証する文字列\n    pattern: 正規表現パターン\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: パターンにマッチしない場合\n\n**内部で定義される名前:**\n- `validate_regex`\n\n\n### メソッド: `@staticmethod validate_email(value: str [✅], path: str [✅]) -> None` [❌ 未使用]\n**Docstring**: メールアドレスを検証\n\nArgs:\n    value: 検証するメールアドレス\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 無効なメールアドレスの場合\n\n**内部で定義される名前:**\n- `pattern`\n- `validate_email`\n\n\n### メソッド: `@staticmethod validate_date(value: str [✅], format_str: str [✅], path: str [✅]) -> None` [❌ 未使用]\n**Docstring**: 日付文字列を検証\n\nArgs:\n    value: 検証する日付文字列\n    format_str: 日付フォーマット\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 日付形式が不正な場合\n\n**内部で定義される名前:**\n- `validate_date`\n\n\n### メソッド: `@staticmethod validate_dict_schema(value: Dict[str, Any] [✅], schema: Dict[str, Dict[str, Any]] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 辞書のスキーマを検証\n\nArgs:\n    value: 検証する辞書\n    schema: スキーマ定義\n    path: エラーメッセージ用のパス\n    \nスキーマの例:\n    {\n        \"name\": {\"type\": str, \"required\": True},\n        \"age\": {\"type\": int, \"required\": True, \"min\": 0, \"max\": 120},\n        \"email\": {\"type\": str, \"required\": False, \"validator\": validate_email}\n    }\n    \nRaises:\n    ValidationError: スキーマに適合しない場合\n\n**内部で定義される名前:**\n- `expected_type`\n- `field_path`\n- `field_schema`\n- `is_required`\n- `max_length`\n- `max_value`\n- `min_length`\n- `min_value`\n- `valid_values`\n- `validate_dict_schema`\n- `validator`\n\n\n### メソッド: `@staticmethod validate_list_items(value: List[Any] [✅], item_validator: Callable[[Any, str], None] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: リストの各項目を検証\n\nArgs:\n    value: 検証するリスト\n    item_validator: 各項目を検証する関数\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: いずれかの項目が検証エラーになった場合\n\n**内部で定義される名前:**\n- `item_path`\n- `validate_list_items`\n\n\n## 関数: `validate_positive_int(item: Any [✅], path: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `validate_positive_int`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/snippet/validator.py",
            "name": "Validator",
            "type": "class",
            "issue": "too_long",
            "lines": 251,
            "limit": 100,
            "lineno": 15
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/snippet/validator.py:329: error: Function is missing a type annotation  [no-untyped-def]\nFound 1 error in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "snippet/scripts/analyze_python_files.py": {
      "file_path": "snippet/scripts/analyze_python_files.py",
      "timestamp": "2025-04-09T21:36:39.536598",
      "structure": "# analyze_python_files.py の解析結果\n\n## インポート一覧\n- `ast` (✅ 使用あり)\n- `datetime` (✅ 使用あり)\n- `pathlib.Path` (✅ 使用あり)\n- `save_file_structure.get_ignored_patterns` (✅ 使用あり)\n- `save_file_structure.should_include` (✅ 使用あり)\n- `subprocess` (✅ 使用あり)\n- `typing.Any` (❌ 未使用)\n- `typing.Dict` (❌ 未使用)\n- `typing.List` (❌ 未使用)\n- `typing.Set` (✅ 使用あり)\n- `typing.Tuple` (✅ 使用あり)\n\n## 関数: `find_usages(node: ast.AST [✅], target_names: Set[str] [✅]) -> Set[str]` [✅ 使用あり]\n**Docstring**: ASTノード内で使用されている名前を検索\n\n**内部で定義される名前:**\n- `find_usages`\n- `used_names`\n\n\n## 関数: `collect_function_calls(tree: ast.AST [✅]) -> Set[str]` [✅ 使用あり]\n**Docstring**: ASTから関数呼び出しを収集\n\n**内部で定義される名前:**\n- `collect_function_calls`\n- `func_name`\n- `used_funcs`\n\n\n## 関数: `analyze_function_body(node: ast.FunctionDef [✅]) -> Tuple[Set[str], Set[str]]` [✅ 使用あり]\n**Docstring**: 関数本体内での変数の使用状況を分析\n\n**内部で定義される名前:**\n- `analyze_function_body`\n- `arg_names`\n- `defined_names`\n- `used_args`\n\n\n## 関数: `extract_docstrings(node: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: ノードからdocstringを抽出\n\n**内部で定義される名前:**\n- `docstring`\n- `extract_docstrings`\n\n\n## 関数: `analyze_python_file(file_path: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: Pythonファイルを解析してMarkdown形式で出力\n\n**内部で定義される名前:**\n- `analysis`\n- `analyze_python_file`\n- `arg_type`\n- `args`\n- `base_str`\n- `bases`\n- `class_methods`\n- `code`\n- `dec_str`\n- `decorators`\n- `full_import`\n- `func_signature`\n- `imported_names`\n- `imports`\n- `method_signature`\n- `name`\n- `returns`\n- `status`\n- `tree`\n- `usage`\n- `usage_flag`\n- `usage_status`\n- `used_funcs`\n\n\n## 関数: `save_python_analysis() -> None` [✅ 使用あり]\n**Docstring**: Pythonファイルの解析結果を保存\n\n**内部で定義される名前:**\n- `analysis`\n- `base_dir`\n- `files_by_folder`\n- `folder`\n- `folder_name`\n- `git_files`\n- `ignored_patterns`\n- `output_file`\n- `python_files`\n- `save_python_analysis`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/scripts/analyze_python_files.py",
            "name": "analyze_function_body",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 5,
            "limit": 4,
            "lineno": 34
          },
          {
            "file": "snippet/scripts/analyze_python_files.py",
            "name": "analyze_python_file",
            "type": "function",
            "issue": "too_long",
            "lines": 109,
            "limit": 100,
            "lineno": 56
          },
          {
            "file": "snippet/scripts/analyze_python_files.py",
            "name": "analyze_python_file",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 6,
            "limit": 4,
            "lineno": 56
          }
        ],
        "issue_count": 3
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/scripts/analyze_python_files.py:51: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/analyze_python_files.py:86: error: Incompatible types in assignment (expression has type \"str\", variable has type \"alias\")  [assignment]\nsnippet/scripts/analyze_python_files.py:87: error: Argument 1 to <set> has incompatible type \"alias\"; expected \"str\"  [arg-type]\nsnippet/scripts/analyze_python_files.py:127: error: Incompatible types in assignment (expression has type \"str\", variable has type \"alias\")  [assignment]\nsnippet/scripts/analyze_python_files.py:159: error: Incompatible types in assignment (expression has type \"str\", variable has type \"alias\")  [assignment]\nsnippet/scripts/analyze_python_files.py:166: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/scripts/analyze_python_files.py:166: note: Use \"-> None\" if function does not return a value\nsnippet/scripts/analyze_python_files.py:190: error: Need type annotation for \"files_by_folder\" (hint: \"files_by_folder: dict[<type>, <type>] = ...\")  [var-annotated]\nFound 7 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "snippet/test_data_generator.py": {
      "file_path": "snippet/test_data_generator.py",
      "timestamp": "2025-04-09T21:36:39.604988",
      "structure": "# test_data_generator.py の解析結果\n\n## インポート一覧\n- `datetime` (✅ 使用あり)\n- `logging` (✅ 使用あり)\n- `random` (✅ 使用あり)\n- `string` (✅ 使用あり)\n- `time` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Callable` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Type` (✅ 使用あり)\n- `typing.Union` (❌ 未使用)\n- `uuid` (✅ 使用あり)\n\n## クラス: `TestDataGenerator`\n**Docstring**: テストケース用のダミーデータを生成するシンプルなジェネレータ\n\n### メソッド: `@staticmethod random_string(length: int [✅]) -> str` [✅ 使用あり]\n**Docstring**: ランダムな文字列を生成\n\n**内部で定義される名前:**\n- `random_string`\n\n\n### メソッド: `@staticmethod random_email() -> str` [✅ 使用あり]\n**Docstring**: ランダムなメールアドレスを生成\n\n**内部で定義される名前:**\n- `domain`\n- `domains`\n- `random_email`\n- `username`\n\n\n### メソッド: `@staticmethod random_date(start_year: int [✅], end_year: int [✅]) -> datetime.date` [✅ 使用あり]\n**Docstring**: ランダムな日付を生成\n\n**内部で定義される名前:**\n- `days_between`\n- `end_date`\n- `random_date`\n- `random_days`\n- `start_date`\n\n\n### メソッド: `@staticmethod random_datetime(start_year: int [✅], end_year: int [✅]) -> datetime.datetime` [✅ 使用あり]\n**Docstring**: ランダムな日時を生成\n\n**内部で定義される名前:**\n- `date`\n- `hour`\n- `minute`\n- `random_datetime`\n- `second`\n\n\n### メソッド: `@staticmethod random_phone() -> str` [✅ 使用あり]\n**Docstring**: ランダムな電話番号を生成\n\n**内部で定義される名前:**\n- `random_phone`\n\n\n### メソッド: `@staticmethod random_uuid() -> str` [✅ 使用あり]\n**Docstring**: ランダムなUUIDを生成\n\n**内部で定義される名前:**\n- `random_uuid`\n\n\n### メソッド: `@staticmethod random_choice(items: List[Any] [✅]) -> Any` [❌ 未使用]\n**Docstring**: リストからランダムに1つ選択\n\n**内部で定義される名前:**\n- `random_choice`\n\n\n### メソッド: `@staticmethod random_bool(true_probability: float [✅]) -> bool` [❌ 未使用]\n**Docstring**: ランダムな真偽値を生成\n\n**内部で定義される名前:**\n- `random_bool`\n\n\n### メソッド: `@staticmethod random_dict(keys: List[str] [✅], value_generators: Dict[str, Callable[[], Any]] [✅]) -> Dict[str, Any]` [❌ 未使用]\n**Docstring**: ランダムな辞書を生成\n\n**内部で定義される名前:**\n- `generator`\n- `random_dict`\n- `result`\n\n\n### メソッド: `@staticmethod random_list(generator: Callable[[], Any] [✅], count: int [✅]) -> List[Any]` [❌ 未使用]\n**Docstring**: ランダムなリストを生成\n\n**内部で定義される名前:**\n- `random_list`\n\n\n## クラス: `Factory`\n**Docstring**: ファクトリーパターンを用いたテストオブジェクト生成クラス\n\n### メソッド: `__init__(self: Any [✅], model_class: Type [✅], default_attrs: Optional[Dict[str, Any]] [✅]) -> None` [❌ 未使用]\n**Docstring**: Args:\n    model_class: 生成するオブジェクトのクラス\n    default_attrs: デフォルトの属性\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `build(self: Any [✅]) -> Any` [✅ 使用あり]\n**Docstring**: オブジェクトを生成\n\nArgs:\n    **kwargs: 上書きする属性\n    \nReturns:\n    生成されたオブジェクト\n\n**内部で定義される名前:**\n- `attrs`\n- `build`\n\n\n### メソッド: `build_batch(self: Any [✅], count: int [✅]) -> List[Any]` [✅ 使用あり]\n**Docstring**: 複数のオブジェクトを一括生成\n\nArgs:\n    count: 生成する数\n    **kwargs: 上書きする属性\n    \nReturns:\n    生成されたオブジェクトのリスト\n\n**内部で定義される名前:**\n- `build_batch`\n\n\n### メソッド: `add_builder(self: Any [✅], attr_name: str [✅], builder: Callable[[], Any] [✅]) -> 'Factory'` [✅ 使用あり]\n**Docstring**: カスタムビルダーを追加\n\nArgs:\n    attr_name: 属性名\n    builder: ビルダー関数\n    \nReturns:\n    自身（メソッドチェーン用）\n\n**内部で定義される名前:**\n- `add_builder`\n\n\n## クラス: `User`\n\n### メソッド: `__init__(self: Any [✅], id: Any [✅], name: Any [✅], email: Any [✅], role: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `__str__(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `__str__`\n\n\n## 関数: `@logger.log_execution_time slow_function() -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `slow_function`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/test_data_generator.py:94: error: Need type annotation for \"custom_builders\" (hint: \"custom_builders: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/test_data_generator.py:96: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/test_data_generator.py:120: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/test_data_generator.py:151: error: Name \"get_logger\" is not defined  [name-defined]\nsnippet/test_data_generator.py:167: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/test_data_generator.py:191: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/test_data_generator.py:197: error: Function is missing a type annotation  [no-untyped-def]\nFound 7 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "snippet/snippet/test_data_generator.py": {
      "file_path": "snippet/snippet/test_data_generator.py",
      "timestamp": "2025-04-09T21:36:39.558723",
      "structure": "# test_data_generator.py の解析結果\n\n## インポート一覧\n- `datetime` (✅ 使用あり)\n- `logging` (✅ 使用あり)\n- `random` (✅ 使用あり)\n- `string` (✅ 使用あり)\n- `time` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Callable` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Type` (✅ 使用あり)\n- `typing.Union` (❌ 未使用)\n- `uuid` (✅ 使用あり)\n\n## クラス: `TestDataGenerator`\n**Docstring**: テストケース用のダミーデータを生成するシンプルなジェネレータ\n\n### メソッド: `@staticmethod random_string(length: int [✅]) -> str` [✅ 使用あり]\n**Docstring**: ランダムな文字列を生成\n\n**内部で定義される名前:**\n- `random_string`\n\n\n### メソッド: `@staticmethod random_email() -> str` [✅ 使用あり]\n**Docstring**: ランダムなメールアドレスを生成\n\n**内部で定義される名前:**\n- `domain`\n- `domains`\n- `random_email`\n- `username`\n\n\n### メソッド: `@staticmethod random_date(start_year: int [✅], end_year: int [✅]) -> datetime.date` [✅ 使用あり]\n**Docstring**: ランダムな日付を生成\n\n**内部で定義される名前:**\n- `days_between`\n- `end_date`\n- `random_date`\n- `random_days`\n- `start_date`\n\n\n### メソッド: `@staticmethod random_datetime(start_year: int [✅], end_year: int [✅]) -> datetime.datetime` [✅ 使用あり]\n**Docstring**: ランダムな日時を生成\n\n**内部で定義される名前:**\n- `date`\n- `hour`\n- `minute`\n- `random_datetime`\n- `second`\n\n\n### メソッド: `@staticmethod random_phone() -> str` [✅ 使用あり]\n**Docstring**: ランダムな電話番号を生成\n\n**内部で定義される名前:**\n- `random_phone`\n\n\n### メソッド: `@staticmethod random_uuid() -> str` [✅ 使用あり]\n**Docstring**: ランダムなUUIDを生成\n\n**内部で定義される名前:**\n- `random_uuid`\n\n\n### メソッド: `@staticmethod random_choice(items: List[Any] [✅]) -> Any` [❌ 未使用]\n**Docstring**: リストからランダムに1つ選択\n\n**内部で定義される名前:**\n- `random_choice`\n\n\n### メソッド: `@staticmethod random_bool(true_probability: float [✅]) -> bool` [❌ 未使用]\n**Docstring**: ランダムな真偽値を生成\n\n**内部で定義される名前:**\n- `random_bool`\n\n\n### メソッド: `@staticmethod random_dict(keys: List[str] [✅], value_generators: Dict[str, Callable[[], Any]] [✅]) -> Dict[str, Any]` [❌ 未使用]\n**Docstring**: ランダムな辞書を生成\n\n**内部で定義される名前:**\n- `generator`\n- `random_dict`\n- `result`\n\n\n### メソッド: `@staticmethod random_list(generator: Callable[[], Any] [✅], count: int [✅]) -> List[Any]` [❌ 未使用]\n**Docstring**: ランダムなリストを生成\n\n**内部で定義される名前:**\n- `random_list`\n\n\n## クラス: `Factory`\n**Docstring**: ファクトリーパターンを用いたテストオブジェクト生成クラス\n\n### メソッド: `__init__(self: Any [✅], model_class: Type [✅], default_attrs: Optional[Dict[str, Any]] [✅]) -> None` [❌ 未使用]\n**Docstring**: Args:\n    model_class: 生成するオブジェクトのクラス\n    default_attrs: デフォルトの属性\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `build(self: Any [✅]) -> Any` [✅ 使用あり]\n**Docstring**: オブジェクトを生成\n\nArgs:\n    **kwargs: 上書きする属性\n    \nReturns:\n    生成されたオブジェクト\n\n**内部で定義される名前:**\n- `attrs`\n- `build`\n\n\n### メソッド: `build_batch(self: Any [✅], count: int [✅]) -> List[Any]` [✅ 使用あり]\n**Docstring**: 複数のオブジェクトを一括生成\n\nArgs:\n    count: 生成する数\n    **kwargs: 上書きする属性\n    \nReturns:\n    生成されたオブジェクトのリスト\n\n**内部で定義される名前:**\n- `build_batch`\n\n\n### メソッド: `add_builder(self: Any [✅], attr_name: str [✅], builder: Callable[[], Any] [✅]) -> 'Factory'` [✅ 使用あり]\n**Docstring**: カスタムビルダーを追加\n\nArgs:\n    attr_name: 属性名\n    builder: ビルダー関数\n    \nReturns:\n    自身（メソッドチェーン用）\n\n**内部で定義される名前:**\n- `add_builder`\n\n\n## クラス: `User`\n\n### メソッド: `__init__(self: Any [✅], id: Any [✅], name: Any [✅], email: Any [✅], role: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `__str__(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `__str__`\n\n\n## 関数: `@logger.log_execution_time slow_function() -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `slow_function`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/snippet/test_data_generator.py:94: error: Need type annotation for \"custom_builders\" (hint: \"custom_builders: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/snippet/test_data_generator.py:96: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/snippet/test_data_generator.py:120: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/snippet/test_data_generator.py:151: error: Name \"get_logger\" is not defined  [name-defined]\nsnippet/snippet/test_data_generator.py:167: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/snippet/test_data_generator.py:191: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/snippet/test_data_generator.py:197: error: Function is missing a type annotation  [no-untyped-def]\nFound 7 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "snippet/utils/__init__.py": {
      "file_path": "snippet/utils/__init__.py",
      "timestamp": "2025-04-09T21:36:39.692918",
      "structure": "# __init__.py の解析結果\n\n## インポート一覧\n- `env_loader.EnvLoader` (❌ 未使用)\n- `exception_handler.exception_handler` (❌ 未使用)\n- `file_utils.FileStructureAnalyzer` (❌ 未使用)\n- `file_utils.FileUtils` (❌ 未使用)\n- `file_utils.SafeFileOps` (❌ 未使用)\n- `input_sanitizer.InputSanitizer` (❌ 未使用)\n- `validator.ValidationError` (❌ 未使用)\n- `validator.Validator` (❌ 未使用)\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/utils/__init__.py:7: error: Skipping analyzing \"snippet.utils.file_utils\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nsnippet/utils/__init__.py:7: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nsnippet/utils/__init__.py:9: error: Skipping analyzing \"snippet.utils.validator\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nFound 2 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "snippet/utils/config_manage.py": {
      "file_path": "snippet/utils/config_manage.py",
      "timestamp": "2025-04-09T21:36:39.700910",
      "structure": "# config_manage.py の解析結果\n\n## インポート一覧\n- `json` (✅ 使用あり)\n- `logging` (✅ 使用あり)\n- `os` (✅ 使用あり)\n- `pathlib.Path` (✅ 使用あり)\n- `tempfile` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (❌ 未使用)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Set` (❌ 未使用)\n- `typing.Union` (✅ 使用あり)\n- `yaml` (✅ 使用あり)\n\n## クラス: `ConfigError` (Exception)\n**Docstring**: 設定関連のエラー\n\n## クラス: `ConfigManager`\n**Docstring**: JSON/YAML設定ファイルの読み込みと検証を行うユーティリティ\n環境ごとの設定マージ機能付き\n\n### メソッド: `__init__(self: Any [✅], config_dir: Union[str, Path] [✅], env: Optional[str] [✅], schema: Optional[Dict[str, Any]] [✅], config_type: str [✅]) -> None` [❌ 未使用]\n**Docstring**: Args:\n    config_dir: 設定ファイルが置かれているディレクトリ\n    env: 環境名（development, testing, production など）\n    schema: 設定ファイルのスキーマ定義（省略可）\n    config_type: 設定ファイルのタイプ（'yaml' または 'json'）\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `load(self: Any [✅], reload: bool [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: 設定ファイルを読み込む\n\nArgs:\n    reload: 設定を再読み込みするかどうか\n    \nReturns:\n    設定データ（辞書）\n    \nRaises:\n    ConfigError: 設定ファイル読み込みに失敗した場合\n\n**内部で定義される名前:**\n- `config_data`\n- `config_files`\n- `load`\n- `merged_config`\n\n\n### メソッド: `get(self: Any [✅], key: str [✅], default: Any [✅]) -> Any` [✅ 使用あり]\n**Docstring**: 設定値を取得\n\nArgs:\n    key: 設定キー（ドット区切りで階層指定可能）\n    default: 設定が見つからない場合のデフォルト値\n    \nReturns:\n    設定値\n\n**内部で定義される名前:**\n- `config`\n- `get`\n- `parts`\n\n\n### メソッド: `get_all(self: Any [✅]) -> Dict[str, Any]` [❌ 未使用]\n**Docstring**: すべての設定を取得\n\nReturns:\n    設定データ（辞書）\n\n**内部で定義される名前:**\n- `get_all`\n\n\n### メソッド: `set(self: Any [✅], key: str [✅], value: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: 実行時に設定値を変更（メモリ内のみ）\n\nArgs:\n    key: 設定キー（ドット区切りで階層指定可能）\n    value: 設定値\n\n**内部で定義される名前:**\n- `config`\n- `parts`\n- `set`\n\n\n### メソッド: `save(self: Any [✅], file_path: Optional[Union[str, Path]] [✅]) -> None` [✅ 使用あり]\n**Docstring**: 設定をファイルに保存（オプション）\n\nArgs:\n    file_path: 保存先ファイルパス（省略時はlocal設定ファイル）\n    \nRaises:\n    ConfigError: 設定ファイル保存に失敗した場合\n\n**内部で定義される名前:**\n- `file_path`\n- `save`\n\n\n### メソッド: `_read_config_file(self: Any [✅], file_path: Path [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: 設定ファイルを読み込む\n\nArgs:\n    file_path: 設定ファイルパス\n    \nReturns:\n    設定データ（辞書）\n    \nRaises:\n    ConfigError: 設定ファイル読み込みに失敗した場合\n\n**内部で定義される名前:**\n- `_read_config_file`\n\n\n### メソッド: `_deep_merge(self: Any [✅], base: Dict[str, Any] [✅], override: Dict[str, Any] [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: 2つの設定辞書を再帰的にマージ\n\nArgs:\n    base: ベースとなる辞書\n    override: 上書きする辞書\n    \nReturns:\n    マージされた辞書\n\n**内部で定義される名前:**\n- `_deep_merge`\n- `result`\n\n\n### メソッド: `_validate_config(self: Any [✅], config: Dict[str, Any] [✅], schema: Dict[str, Any] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: スキーマに基づいて設定を検証\n\nArgs:\n    config: 検証する設定\n    schema: スキーマ定義\n    path: 現在のパス（エラーメッセージ用）\n    \nRaises:\n    ConfigError: 検証に失敗した場合\n\n**内部で定義される名前:**\n- `_validate_config`\n- `current_path`\n- `expected_type`\n- `item_path`\n- `item_type`\n- `value`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/utils/config_manage.py",
            "name": "ConfigManager",
            "type": "class",
            "issue": "too_long",
            "lines": 280,
            "limit": 100,
            "lineno": 14
          },
          {
            "file": "snippet/utils/config_manage.py",
            "name": "ConfigManager",
            "type": "class",
            "issue": "too_nested",
            "nest_level": 9,
            "limit": 4,
            "lineno": 14
          },
          {
            "file": "snippet/utils/config_manage.py",
            "name": "_validate_config",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 9,
            "limit": 4,
            "lineno": 231
          }
        ],
        "issue_count": 3
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/utils/config_manage.py:3: error: Library stubs not installed for \"yaml\"  [import-untyped]\nsnippet/utils/config_manage.py:3: note: Hint: \"python3 -m pip install types-PyYAML\"\nsnippet/utils/config_manage.py:3: note: (or run \"mypy --install-types\" to install all missing stub packages)\nsnippet/utils/config_manage.py:3: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nsnippet/utils/config_manage.py:21: error: Incompatible default for argument \"config_dir\" (default has type \"None\", argument has type \"str | Path\")  [assignment]\nsnippet/utils/config_manage.py:21: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsnippet/utils/config_manage.py:21: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsnippet/utils/config_manage.py:44: error: Need type annotation for \"_config\" (hint: \"_config: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/utils/config_manage.py:71: error: Need type annotation for \"merged_config\" (hint: \"merged_config: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/utils/config_manage.py:205: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nFound 5 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "tests/__init__.py": {
      "file_path": "tests/__init__.py",
      "timestamp": "2025-04-09T21:36:42.003435",
      "structure": "# __init__.py の解析結果\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": true,
        "issues": []
      }
    },
    "snippet/utils/logger/__init__.py": {
      "file_path": "snippet/utils/logger/__init__.py",
      "timestamp": "2025-04-09T21:36:41.594417",
      "structure": "# __init__.py の解析結果\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": true,
        "issues": []
      }
    },
    "snippet/utils/exception_handler.py": {
      "file_path": "snippet/utils/exception_handler.py",
      "timestamp": "2025-04-09T21:36:41.001561",
      "structure": "# exception_handler.py の解析結果\n\n## インポート一覧\n- `functools` (✅ 使用あり)\n- `logging` (✅ 使用あり)\n- `os` (✅ 使用あり)\n- `sys` (❌ 未使用)\n- `traceback` (✅ 使用あり)\n\n## 関数: `exception_handler(reraise: Any [✅], log_level: Any [✅], production_mode: Any [✅], default_return: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: 関数実行時の例外を捕捉し詳細情報を記録するデコレータ\n\nArgs:\n    reraise: 例外を再スローするかどうか\n    log_level: ログレベル\n    production_mode: 本番環境モードフラグ（Noneの場合はPRODUCTION環境変数を使用）\n    default_return: 例外発生時のデフォルト戻り値\n\nReturns:\n    デコレートされた関数\n\n**内部で定義される名前:**\n- `decorator`\n- `detailed_message`\n- `error_message`\n- `exception_handler`\n- `func_name`\n- `module_name`\n- `production_mode`\n- `wrapper`\n\n\n## 関数: `decorator(func: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `decorator`\n- `detailed_message`\n- `error_message`\n- `func_name`\n- `module_name`\n- `wrapper`\n\n\n## 関数: `@exception_handler(production_mode=False) divide(a: Any [✅], b: Any [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `divide`\n\n\n## 関数: `@exception_handler(production_mode=True, reraise=False, default_return=0) risky_operation(items: Any [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `risky_operation`\n\n\n## 関数: `@functools.wraps(func) wrapper() -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `detailed_message`\n- `error_message`\n- `func_name`\n- `module_name`\n- `wrapper`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/utils/exception_handler.py:16: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/exception_handler.py:34: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/exception_handler.py:36: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/exception_handler.py:72: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/exception_handler.py:77: error: Function is missing a type annotation  [no-untyped-def]\nFound 5 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "tests/test_db/__init__.py": {
      "file_path": "tests/test_db/__init__.py",
      "timestamp": "2025-04-09T21:36:42.023270",
      "structure": "# __init__.py の解析結果\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": true,
        "issues": []
      }
    },
    "snippet/utils/env_loader.py": {
      "file_path": "snippet/utils/env_loader.py",
      "timestamp": "2025-04-09T21:36:40.994275",
      "structure": "# env_loader.py の解析結果\n\n## インポート一覧\n- `os` (✅ 使用あり)\n- `pathlib.Path` (✅ 使用あり)\n- `re` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Union` (❌ 未使用)\n\n## クラス: `EnvLoader`\n**Docstring**: 環境に応じて .env ファイルを読み込むユーティリティ\n必須環境変数のチェック機能付き\n\n### メソッド: `__init__(self: Any [✅], base_dir: Optional[str] [✅], env: Optional[str] [✅], required_vars: Optional[List[str]] [✅]) -> None` [❌ 未使用]\n**Docstring**: Args:\n    base_dir: .env ファイルが置かれているディレクトリ\n    env: 環境名 (development, testing, production など)\n    required_vars: 必須の環境変数リスト\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `load(self: Any [✅], override: bool [✅]) -> Dict[str, str]` [✅ 使用あり]\n**Docstring**: 環境変数をロード\n\nArgs:\n    override: 既存の環境変数を上書きするかどうか\n    \nReturns:\n    ロードされた環境変数の辞書\n\nRaises:\n    ValueError: 必須環境変数が見つからない場合\n    FileNotFoundError: .env ファイルが見つからない場合\n\n**内部で定義される名前:**\n- `env_files`\n- `file_vars`\n- `load`\n- `loaded_vars`\n- `missing_vars`\n\n\n### メソッド: `_parse_env_file(self: Any [❌], file_path: Path [✅]) -> Dict[str, str]` [✅ 使用あり]\n**Docstring**: .env ファイルをパース\n\nArgs:\n    file_path: .env ファイルのパス\n    \nReturns:\n    パースされた環境変数の辞書\n\n**内部で定義される名前:**\n- `_parse_env_file`\n- `line`\n- `match`\n- `result`\n- `value`\n\n\n### メソッド: `get(self: Any [✅], key: str [✅], default: Any [✅], as_type: Optional[type] [✅]) -> Any` [✅ 使用あり]\n**Docstring**: 環境変数を取得（オプションで型変換）\n\nArgs:\n    key: 環境変数名\n    default: デフォルト値\n    as_type: 型変換関数（int, float, bool など）\n    \nReturns:\n    環境変数の値（変換後）\n\n**内部で定義される名前:**\n- `get`\n- `value`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/utils/env_loader.py",
            "name": "EnvLoader",
            "type": "class",
            "issue": "too_long",
            "lines": 125,
            "limit": 100,
            "lineno": 7
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          }
        ]
      }
    },
    "snippet/utils/input_sanitizer.py": {
      "file_path": "snippet/utils/input_sanitizer.py",
      "timestamp": "2025-04-09T21:36:41.023818",
      "structure": "# input_sanitizer.py の解析結果\n\n## インポート一覧\n- `html` (✅ 使用あり)\n- `re` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Union` (❌ 未使用)\n\n## クラス: `InputSanitizer`\n**Docstring**: 入力値のサニタイズを行うユーティリティクラス\nHTMLエスケープやSQLインジェクション対策を提供\n\n### メソッド: `@staticmethod sanitize_html(text: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: HTMLタグをエスケープ\n\nArgs:\n    text: 処理対象のテキスト\n    \nReturns:\n    エスケープされたテキスト\n\n**内部で定義される名前:**\n- `sanitize_html`\n- `text`\n\n\n### メソッド: `@staticmethod strip_tags(text: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: HTMLタグを削除\n\nArgs:\n    text: 処理対象のテキスト\n    \nReturns:\n    タグが削除されたテキスト\n\n**内部で定義される名前:**\n- `strip_tags`\n\n\n### メソッド: `@staticmethod sanitize_sql(text: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: SQLインジェクション対策のためのエスケープ\n\n注意: これはパラメータ化クエリの代わりにはなりません。\n常にプリペアドステートメントを使用してください。\n\nArgs:\n    text: 処理対象のテキスト\n    \nReturns:\n    エスケープされたテキスト\n\n**内部で定義される名前:**\n- `result`\n- `sanitize_sql`\n- `special_chars`\n- `sql_keywords`\n\n\n### メソッド: `@staticmethod sanitize_filename(text: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: ファイル名から危険な文字を削除\n\nArgs:\n    text: 処理対象のテキスト\n    \nReturns:\n    安全なファイル名\n\n**内部で定義される名前:**\n- `sanitize_filename`\n- `text`\n\n\n### メソッド: `@staticmethod sanitize_integer(value: Any [✅], default: int [✅], min_value: Optional[int] [✅], max_value: Optional[int] [✅]) -> int` [✅ 使用あり]\n**Docstring**: 整数値をサニタイズ\n\nArgs:\n    value: 処理対象の値\n    default: 変換できない場合のデフォルト値\n    min_value: 最小値\n    max_value: 最大値\n    \nReturns:\n    サニタイズされた整数値\n\n**内部で定義される名前:**\n- `result`\n- `sanitize_integer`\n\n\n### メソッド: `@staticmethod sanitize_email(email: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: メールアドレスをサニタイズ\n\nArgs:\n    email: メールアドレス\n    \nReturns:\n    サニタイズされたメールアドレス（無効な場合は空文字）\n\n**内部で定義される名前:**\n- `pattern`\n- `sanitize_email`\n\n\n### メソッド: `@staticmethod sanitize_dict(data: Dict[str, Any] [✅], allowed_keys: List[str] [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: 辞書から許可されたキーのみを抽出\n\nArgs:\n    data: 処理対象の辞書\n    allowed_keys: 許可するキーのリスト\n    \nReturns:\n    サニタイズされた辞書\n\n**内部で定義される名前:**\n- `sanitize_dict`\n\n\n### メソッド: `@staticmethod sanitize_all_dict_values(data: Dict[str, Any] [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: 辞書のすべての文字列値をHTMLエスケープ\n\nArgs:\n    data: 処理対象の辞書\n    \nReturns:\n    サニタイズされた辞書\n\n**内部で定義される名前:**\n- `result`\n- `sanitize_all_dict_values`\n\n\n### メソッド: `@staticmethod sanitize_all_list_values(data: List[Any] [✅]) -> List[Any]` [✅ 使用あり]\n**Docstring**: リストのすべての文字列値をHTMLエスケープ\n\nArgs:\n    data: 処理対象のリスト\n    \nReturns:\n    サニタイズされたリスト\n\n**内部で定義される名前:**\n- `result`\n- `sanitize_all_list_values`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/utils/input_sanitizer.py",
            "name": "InputSanitizer",
            "type": "class",
            "issue": "too_long",
            "lines": 209,
            "limit": 100,
            "lineno": 6
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/utils/input_sanitizer.py:183: error: Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"str\")  [assignment]\nsnippet/utils/input_sanitizer.py:185: error: Incompatible types in assignment (expression has type \"list[Any]\", target has type \"str\")  [assignment]\nsnippet/utils/input_sanitizer.py:209: error: Argument 1 to \"append\" of \"list\" has incompatible type \"dict[str, Any]\"; expected \"str\"  [arg-type]\nsnippet/utils/input_sanitizer.py:211: error: Argument 1 to \"append\" of \"list\" has incompatible type \"list[Any]\"; expected \"str\"  [arg-type]\nsnippet/utils/input_sanitizer.py:246: error: Incompatible types in assignment (expression has type \"str\", variable has type \"int\")  [assignment]\nFound 5 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "tests/test_indexer/__init__.py": {
      "file_path": "tests/test_indexer/__init__.py",
      "timestamp": "2025-04-09T21:36:42.195091",
      "structure": "# __init__.py の解析結果\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": true,
        "issues": []
      }
    },
    "snippet/analytics/code_analyzer.py": {
      "file_path": "snippet/analytics/code_analyzer.py",
      "timestamp": "2025-04-09T21:36:39.535294",
      "structure": "# code_analyzer.py の解析結果\n\n## インポート一覧\n- `argparse` (✅ 使用あり)\n- `concurrent.futures` (❌ 未使用)\n- `datetime` (✅ 使用あり)\n- `json` (✅ 使用あり)\n- `os` (✅ 使用あり)\n- `pathlib.Path` (✅ 使用あり)\n- `scripts.analyze_python_files.analyze_python_file` (✅ 使用あり)\n- `scripts.analyze_python_files.collect_function_calls` (❌ 未使用)\n- `scripts.analyze_python_files.find_usages` (❌ 未使用)\n- `scripts.check_code_quality.run_check` (✅ 使用あり)\n- `scripts.code_complexity_checker.CodeComplexityChecker` (✅ 使用あり)\n- `scripts.save_file_structure.get_ignored_patterns` (✅ 使用あり)\n- `scripts.save_file_structure.should_include` (✅ 使用あり)\n- `subprocess` (✅ 使用あり)\n- `sys` (❌ 未使用)\n- `tqdm.tqdm` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Set` (❌ 未使用)\n- `typing.Tuple` (✅ 使用あり)\n- `typing.Union` (❌ 未使用)\n\n## クラス: `CodeAnalyzer`\n**Docstring**: コードの品質と構造を分析する統合ツール\n\n### メソッド: `__init__(self: Any [✅], max_lines: int [✅], max_nest_level: int [✅], quality_checks: Optional[List[Tuple[List[str], str]]] [✅], max_workers: Optional[int] [✅]) -> None` [❌ 未使用]\n**Docstring**: 統合コード分析ツールを初期化\n\nArgs:\n    max_lines: 関数の最大行数の閾値\n    max_nest_level: 最大ネストレベルの閾値\n    quality_checks: 追加の品質チェック (コマンドとその説明のタプルのリスト)\n                   例: [([\"ruff\", \"check\", \".\"], \"Ruffによるコードチェック\")]\n    max_workers: 並列処理の最大ワーカー数（Noneの場合はCPUコア数）\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `analyze_file(self: Any [✅], file_path: str [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: 単一ファイルを分析\n\nArgs:\n    file_path: 分析するファイルのパス\n    \nReturns:\n    分析結果\n\n**内部で定義される名前:**\n- `analyze_file`\n- `code`\n- `file_result`\n- `structure_analysis`\n\n\n### メソッド: `analyze_directory(self: Any [✅], directory: str [✅], patterns: Optional[List[str]] [✅], recursive: bool [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: ディレクトリ内のファイルを分析\n\nArgs:\n    directory: 分析するディレクトリ\n    patterns: 分析対象ファイルのパターン（例: ['*.py']）\n    recursive: サブディレクトリも再帰的に分析するかどうか\n    \nReturns:\n    分析結果\n\n**内部で定義される名前:**\n- `analyze_directory`\n- `dir_path`\n- `directory_result`\n- `file_path`\n- `file_result`\n- `future_to_file`\n- `git_files`\n- `ignored_patterns`\n- `path`\n- `patterns`\n- `py_files`\n\n\n### メソッド: `_generate_summary(self: Any [❌], result: Dict[str, Any] [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: 分析結果のサマリーを生成\n\nArgs:\n    result: 分析結果\n    \nReturns:\n    サマリー情報\n\n**内部で定義される名前:**\n- `_generate_summary`\n- `complex_files`\n- `issue_count`\n- `summary`\n\n\n## 関数: `run_check(command: Any [✅], description: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: コマンドを実行してチェックを行う\n\n**内部で定義される名前:**\n- `result`\n- `run_check`\n\n\n## 関数: `get_ignored_patterns() -> None` [✅ 使用あり]\n**Docstring**: 無視するパターンを取得\n\n**内部で定義される名前:**\n- `get_ignored_patterns`\n- `ignored_patterns`\n\n\n## 関数: `should_include(path: Any [✅], ignored_patterns: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: ファイルを含めるかどうかを判定\n\n**内部で定義される名前:**\n- `path_str`\n- `should_include`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/analytics/code_analyzer.py",
            "name": "CodeAnalyzer",
            "type": "class",
            "issue": "too_long",
            "lines": 229,
            "limit": 100,
            "lineno": 70
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/analytics/code_analyzer.py:14: error: Library stubs not installed for \"tqdm\"  [import-untyped]\nsnippet/analytics/code_analyzer.py:14: note: Hint: \"python3 -m pip install types-tqdm\"\nsnippet/analytics/code_analyzer.py:14: note: (or run \"mypy --install-types\" to install all missing stub packages)\nsnippet/analytics/code_analyzer.py:14: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nsnippet/analytics/code_analyzer.py:23: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/analytics/code_analyzer.py:23: error: All conditional function variants must have identical signatures  [misc]\nsnippet/analytics/code_analyzer.py:23: note: Original:\nsnippet/analytics/code_analyzer.py:23: note:     def run_check(command: list[str], description: str) -> tuple[bool, str]\nsnippet/analytics/code_analyzer.py:23: note: Redefinition:\nsnippet/analytics/code_analyzer.py:23: note:     def run_check(command: Any, description: Any) -> Any\nsnippet/analytics/code_analyzer.py:45: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/analytics/code_analyzer.py:47: error: Need type annotation for \"ignored_patterns\" (hint: \"ignored_patterns: set[<type>] = ...\")  [var-annotated]\nsnippet/analytics/code_analyzer.py:61: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/analytics/code_analyzer.py:109: error: Need type annotation for \"results\" (hint: \"results: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/analytics/code_analyzer.py:152: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/code_analyzer.py:153: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/code_analyzer.py:236: error: Unsupported target for indexed assignment (\"object\")  [index]\nsnippet/analytics/code_analyzer.py:239: error: Unsupported target for indexed assignment (\"object\")  [index]\nsnippet/analytics/code_analyzer.py:250: error: Unsupported target for indexed assignment (\"object\")  [index]\nsnippet/analytics/code_analyzer.py:251: error: Value of type \"object\" is not indexable  [index]\nFound 13 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "snippet/analytics/__init__.py": {
      "file_path": "snippet/analytics/__init__.py",
      "timestamp": "2025-04-09T21:36:39.535176",
      "structure": "# __init__.py の解析結果\n\n## インポート一覧\n- `code_analyzer.CodeAnalyzer` (❌ 未使用)\n- `code_analyzer.analyze_directory` (❌ 未使用)\n- `code_analyzer.analyze_file` (❌ 未使用)\n- `report_generator.create_summary_report` (❌ 未使用)\n- `report_generator.generate_enhanced_report` (❌ 未使用)\n- `report_generator.generate_report` (❌ 未使用)\n- `report_generator.save_enhanced_report` (❌ 未使用)\n- `report_generator.save_report` (❌ 未使用)\n- `validator_integration.validate_functions` (❌ 未使用)\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          }
        ]
      }
    },
    "snippet/analytics/report_generator.py": {
      "file_path": "snippet/analytics/report_generator.py",
      "timestamp": "2025-04-09T21:36:39.535422",
      "structure": "# report_generator.py の解析結果\n\n## インポート一覧\n- `argparse` (✅ 使用あり)\n- `code_analyzer.CodeAnalyzer` (✅ 使用あり)\n- `code_analyzer.analyze_directory` (✅ 使用あり)\n- `code_analyzer.analyze_file` (✅ 使用あり)\n- `datetime` (✅ 使用あり)\n- `importlib` (❌ 未使用)\n- `json` (✅ 使用あり)\n- `os` (✅ 使用あり)\n- `pathlib.Path` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Union` (❌ 未使用)\n- `validator_integration.validate_functions` (✅ 使用あり)\n\n## 関数: `generate_report(results: Dict[str, Any] [✅], format: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: 分析結果からレポートを生成\n\nArgs:\n    results: 分析結果の辞書\n    format: 出力フォーマット ('markdown', 'html', 'json')\n    \nReturns:\n    フォーマット済みレポート\n\n**内部で定義される名前:**\n- `generate_report`\n- `html`\n- `md_content`\n\n\n## 関数: `_generate_file_report_md(results: Dict[str, Any] [✅]) -> str` [✅ 使用あり]\n**Docstring**: 単一ファイルの分析レポートをマークダウンで生成\n\n**内部で定義される名前:**\n- `_generate_file_report_md`\n- `complexity`\n- `file_path`\n- `issue_type`\n- `issues`\n- `limit`\n- `lineno`\n- `lines`\n- `name`\n- `nest_level`\n- `quality`\n- `report`\n- `structure`\n\n\n## 関数: `_generate_directory_report_md(results: Dict[str, Any] [✅]) -> str` [✅ 使用あり]\n**Docstring**: ディレクトリの分析レポートをマークダウンで生成\n\n**内部で定義される名前:**\n- `_generate_directory_report_md`\n- `complex_files`\n- `complexity`\n- `directory`\n- `file_details`\n- `file_name`\n- `issue_type`\n- `issues`\n- `limit`\n- `lineno`\n- `lines`\n- `name`\n- `nest_level`\n- `quality_issues`\n- `report`\n- `summary`\n\n\n## 関数: `_generate_validator_report_md(results: Dict[str, Any] [✅]) -> str` [✅ 使用あり]\n**Docstring**: 関数検証結果のレポートをマークダウンで生成\n\nArgs:\n    results: 関数検証の結果\n    \nReturns:\n    マークダウン形式のレポート\n\n**内部で定義される名前:**\n- `_generate_validator_report_md`\n- `classes`\n- `functions`\n- `issue_type`\n- `issues`\n- `message`\n- `method_issues`\n- `methods`\n- `report`\n- `stats`\n- `status`\n\n\n## 関数: `generate_enhanced_report(code_analysis_results: Dict[str, Any] [✅], validator_results: Optional[Dict[str, Any]] [✅], format: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: コード分析と関数検証の結果を統合したレポートを生成\n\nArgs:\n    code_analysis_results: コード分析の結果\n    validator_results: 関数検証の結果（オプション）\n    format: 出力フォーマット ('markdown', 'html', 'json')\n    \nReturns:\n    フォーマット済みレポート\n\n**内部で定義される名前:**\n- `base_report`\n- `combined_results`\n- `generate_enhanced_report`\n- `html`\n- `md_report`\n- `validator_report`\n\n\n## 関数: `save_report(results: Dict[str, Any] [✅], output_file: str [✅], format: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: レポートをファイルに保存\n\nArgs:\n    results: 分析結果\n    output_file: 出力ファイルパス\n    format: レポート形式\n    \nReturns:\n    保存したファイルパス\n\n**内部で定義される名前:**\n- `report`\n- `save_report`\n\n\n## 関数: `save_enhanced_report(code_analysis_results: Dict[str, Any] [✅], validator_results: Optional[Dict[str, Any]] [✅], output_file: str [✅], format: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: 拡張レポートをファイルに保存\n\nArgs:\n    code_analysis_results: コード分析の結果\n    validator_results: 関数検証の結果（オプション）\n    output_file: 出力ファイルパス\n    format: レポート形式\n    \nReturns:\n    保存したファイルパス\n\n**内部で定義される名前:**\n- `report`\n- `save_enhanced_report`\n\n\n## 関数: `create_summary_report(directory: str [✅], output_dir: str [✅], patterns: Optional[List[str]] [✅], recursive: bool [✅], max_lines: int [✅], max_nest_level: int [✅], validate_functions: bool [✅]) -> str` [❌ 未使用]\n**Docstring**: ディレクトリの分析を実行してレポートを作成する便利関数\n\nArgs:\n    directory: 分析するディレクトリ\n    output_dir: レポートの出力ディレクトリ\n    patterns: 分析対象ファイルパターン\n    recursive: サブディレクトリも含めるか\n    max_lines: 関数の最大行数閾値\n    max_nest_level: 最大ネストレベル閾値\n    validate_functions: 関数検証も行うかどうか\n    \nReturns:\n    生成されたレポートファイルのパス\n\n**内部で定義される名前:**\n- `analyzer`\n- `complex_files`\n- `create_summary_report`\n- `dir_name`\n- `output_file`\n- `results`\n- `target_file`\n- `timestamp`\n- `validate_functions`\n- `validator_results`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/analytics/report_generator.py",
            "name": "_generate_directory_report_md",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 5,
            "limit": 4,
            "lineno": 143
          },
          {
            "file": "snippet/analytics/report_generator.py",
            "name": "_generate_validator_report_md",
            "type": "function",
            "issue": "too_long",
            "lines": 117,
            "limit": 100,
            "lineno": 215
          },
          {
            "file": "snippet/analytics/report_generator.py",
            "name": "_generate_validator_report_md",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 10,
            "limit": 4,
            "lineno": 215
          }
        ],
        "issue_count": 3
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          }
        ]
      }
    },
    "snippet/analytics/validator_integration.py": {
      "file_path": "snippet/analytics/validator_integration.py",
      "timestamp": "2025-04-09T21:36:39.535806",
      "structure": "# validator_integration.py の解析結果\n\n## インポート一覧\n- `argparse` (✅ 使用あり)\n- `ast` (❌ 未使用)\n- `inspect` (✅ 使用あり)\n- `json` (✅ 使用あり)\n- `os` (❌ 未使用)\n- `pathlib.Path` (✅ 使用あり)\n- `sys` (❌ 未使用)\n- `test_data_generator.TestDataGenerator` (✅ 使用あり)\n- `typing` (❌ 未使用)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (❌ 未使用)\n- `typing.Set` (❌ 未使用)\n- `typing.Tuple` (❌ 未使用)\n- `typing.Union` (❌ 未使用)\n- `typing._GenericAlias` (✅ 使用あり)\n- `typing._SpecialGenericAlias` (❌ 未使用)\n- `typing.get_type_hints` (✅ 使用あり)\n- `validator.ValidationError` (✅ 使用あり)\n- `validator.Validator` (✅ 使用あり)\n\n## クラス: `FunctionValidator`\n**Docstring**: 関数の入出力形式を検証するバリデータ\n\n### メソッド: `__init__(self: Any [✅], test_data_count: int [✅]) -> None` [❌ 未使用]\n**Docstring**: 初期化\n\nArgs:\n    test_data_count: 生成するテストデータの数\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `_generate_test_value(self: Any [✅], type_hint: Any [✅]) -> Any` [✅ 使用あり]\n**Docstring**: 型ヒントに基づいてテスト値を生成\n\nArgs:\n    type_hint: 型ヒント\n    \nReturns:\n    生成された値\n\n**内部で定義される名前:**\n- `_generate_test_value`\n- `element_type`\n\n\n### メソッド: `generate_test_data(self: Any [✅], func: Any [✅]) -> List[Dict[str, Any]]` [✅ 使用あり]\n**Docstring**: 関数のテストデータを生成\n\nArgs:\n    func: 対象の関数\n    \nReturns:\n    生成されたテストデータのリスト\n\n**内部で定義される名前:**\n- `args_data`\n- `generate_test_data`\n- `parameters`\n- `sig`\n- `test_data`\n- `type_hints`\n\n\n### メソッド: `validate_function_types(self: Any [❌], func: Any [✅]) -> List[Dict[str, Any]]` [✅ 使用あり]\n**Docstring**: 関数の型ヒントを検証\n\nArgs:\n    func: 対象の関数\n    \nReturns:\n    検出された問題のリスト\n\n**内部で定義される名前:**\n- `issues`\n- `parameters`\n- `sig`\n- `type_hints`\n- `validate_function_types`\n\n\n### メソッド: `validate_function_behavior(self: Any [✅], func: Any [✅], instance: Any [✅]) -> List[Dict[str, Any]]` [✅ 使用あり]\n**Docstring**: 関数の動作を検証\n\nArgs:\n    func: 対象の関数\n    instance: クラスメソッドの場合のインスタンス\n    \nReturns:\n    検出された問題のリスト\n\n**内部で定義される名前:**\n- `issues`\n- `result`\n- `return_type`\n- `test_data_list`\n- `type_hints`\n- `validate_function_behavior`\n\n\n### メソッド: `_validate_type(self: Any [✅], value: Any [✅], expected_type: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: 値の型を検証\n\nArgs:\n    value: 検証する値\n    expected_type: 期待される型\n    \nRaises:\n    ValidationError: 型が一致しない場合\n\n**内部で定義される名前:**\n- `_validate_type`\n- `element_type`\n\n\n### メソッド: `get_function_signature(self: Any [❌], func: Any [✅]) -> str` [✅ 使用あり]\n**Docstring**: 関数のシグネチャを取得\n\nArgs:\n    func: 対象の関数\n    \nReturns:\n    関数のシグネチャ文字列\n\n**内部で定義される名前:**\n- `default_str`\n- `get_function_signature`\n- `params`\n- `return_type`\n- `return_type_str`\n- `sig`\n- `type_hints`\n- `type_str`\n\n\n### メソッド: `validate_module_functions(self: Any [✅], module_or_path: Any [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: モジュール内のすべての関数を検証\n\nArgs:\n    module_or_path: モジュールまたはファイルパス\n    \nReturns:\n    検証結果\n\n**内部で定義される名前:**\n- `behavior_issues`\n- `class_info`\n- `func_info`\n- `instance`\n- `method_info`\n- `module`\n- `module_name`\n- `results`\n- `spec`\n- `type_issues`\n- `validate_module_functions`\n\n\n## 関数: `validate_functions(module_or_path: Any [✅], test_data_count: int [✅]) -> Dict[str, Any]` [❌ 未使用]\n**Docstring**: モジュール内の関数を検証するヘルパー関数\n\nArgs:\n    module_or_path: モジュールまたはファイルパス\n    test_data_count: 生成するテストデータの数\n    \nReturns:\n    検証結果\n\n**内部で定義される名前:**\n- `validate_functions`\n- `validator`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/analytics/validator_integration.py",
            "name": "FunctionValidator",
            "type": "class",
            "issue": "too_long",
            "lines": 476,
            "limit": 100,
            "lineno": 30
          },
          {
            "file": "snippet/analytics/validator_integration.py",
            "name": "FunctionValidator",
            "type": "class",
            "issue": "too_nested",
            "nest_level": 11,
            "limit": 4,
            "lineno": 30
          },
          {
            "file": "snippet/analytics/validator_integration.py",
            "name": "_generate_test_value",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 11,
            "limit": 4,
            "lineno": 47
          },
          {
            "file": "snippet/analytics/validator_integration.py",
            "name": "_validate_type",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 6,
            "limit": 4,
            "lineno": 253
          },
          {
            "file": "snippet/analytics/validator_integration.py",
            "name": "validate_module_functions",
            "type": "function",
            "issue": "too_long",
            "lines": 156,
            "limit": 100,
            "lineno": 350
          },
          {
            "file": "snippet/analytics/validator_integration.py",
            "name": "validate_module_functions",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 5,
            "limit": 4,
            "lineno": 350
          }
        ],
        "issue_count": 6
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/analytics/validator_integration.py:21: error: Module \"typing\" has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?  [attr-defined]\nsnippet/analytics/validator_integration.py:24: error: Module \"typing\" has no attribute \"_SpecialGenericAlias\"  [attr-defined]\nsnippet/analytics/validator_integration.py:45: error: Need type annotation for \"issues\" (hint: \"issues: list[<type>] = ...\")  [var-annotated]\nsnippet/analytics/validator_integration.py:102: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/analytics/validator_integration.py:145: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/analytics/validator_integration.py:192: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/analytics/validator_integration.py:305: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/analytics/validator_integration.py:350: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/analytics/validator_integration.py:379: error: Name \"importlib\" is not defined  [name-defined]\nsnippet/analytics/validator_integration.py:380: error: Name \"importlib\" is not defined  [name-defined]\nsnippet/analytics/validator_integration.py:401: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:401: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:414: error: \"Sequence[str]\" has no attribute \"extend\"  [attr-defined]\nsnippet/analytics/validator_integration.py:415: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:415: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:421: error: \"Sequence[str]\" has no attribute \"extend\"  [attr-defined]\nsnippet/analytics/validator_integration.py:422: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:422: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:424: error: \"Sequence[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:431: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:431: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:434: error: \"Collection[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:455: error: \"Sequence[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:466: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:466: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:479: error: \"Sequence[str]\" has no attribute \"extend\"  [attr-defined]\nsnippet/analytics/validator_integration.py:480: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:480: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:487: error: \"Sequence[str]\" has no attribute \"extend\"  [attr-defined]\nsnippet/analytics/validator_integration.py:488: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:488: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:490: error: \"Sequence[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:497: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:497: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:500: error: \"Sequence[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:503: error: \"Collection[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:508: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nFound 37 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "snippet/validator.py": {
      "file_path": "snippet/validator.py",
      "timestamp": "2025-04-09T21:36:41.750935",
      "structure": "# validator.py の解析結果\n\n## インポート一覧\n- `datetime.datetime` (✅ 使用あり)\n- `re` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Callable` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Set` (✅ 使用あり)\n- `typing.Tuple` (✅ 使用あり)\n- `typing.Type` (✅ 使用あり)\n- `typing.Union` (✅ 使用あり)\n\n## クラス: `ValidationError` (Exception)\n**Docstring**: バリデーションエラー\n\n### メソッド: `__init__(self: Any [✅], message: str [✅], path: Optional[str] [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `__init__`\n\n\n## クラス: `Validator`\n**Docstring**: データ構造を検証するシンプルなバリデーター\n辞書やリストの構造を検証し、期待される型と実際の値を比較\n\n### メソッド: `@staticmethod validate_type(value: Any [✅], expected_type: Union[Type, Tuple[Type, ...]] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 値の型を検証\n\nArgs:\n    value: 検証する値\n    expected_type: 期待される型（タプルの場合はいずれかの型）\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 型が一致しない場合\n\n**内部で定義される名前:**\n- `actual_type_str`\n- `expected_type_str`\n- `type_names`\n- `validate_type`\n\n\n### メソッド: `@staticmethod validate_in(value: Any [✅], valid_values: List[Any] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 値が許容値リストに含まれているか検証\n\nArgs:\n    value: 検証する値\n    valid_values: 許容値のリスト\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 値が許容値に含まれない場合\n\n**内部で定義される名前:**\n- `validate_in`\n\n\n### メソッド: `@staticmethod validate_length(value: Union[str, List, Dict, Set] [✅], min_length: Optional[int] [✅], max_length: Optional[int] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 文字列、リスト、辞書、集合の長さを検証\n\nArgs:\n    value: 検証する値\n    min_length: 最小長さ（省略可）\n    max_length: 最大長さ（省略可）\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 長さが範囲外の場合\n\n**内部で定義される名前:**\n- `length`\n- `validate_length`\n\n\n### メソッド: `@staticmethod validate_range(value: Union[int, float] [✅], min_value: Optional[Union[int, float]] [✅], max_value: Optional[Union[int, float]] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 数値の範囲を検証\n\nArgs:\n    value: 検証する値\n    min_value: 最小値（省略可）\n    max_value: 最大値（省略可）\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 値が範囲外の場合\n\n**内部で定義される名前:**\n- `validate_range`\n\n\n### メソッド: `@staticmethod validate_regex(value: str [✅], pattern: str [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 文字列を正規表現でチェック\n\nArgs:\n    value: 検証する文字列\n    pattern: 正規表現パターン\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: パターンにマッチしない場合\n\n**内部で定義される名前:**\n- `validate_regex`\n\n\n### メソッド: `@staticmethod validate_email(value: str [✅], path: str [✅]) -> None` [❌ 未使用]\n**Docstring**: メールアドレスを検証\n\nArgs:\n    value: 検証するメールアドレス\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 無効なメールアドレスの場合\n\n**内部で定義される名前:**\n- `pattern`\n- `validate_email`\n\n\n### メソッド: `@staticmethod validate_date(value: str [✅], format_str: str [✅], path: str [✅]) -> None` [❌ 未使用]\n**Docstring**: 日付文字列を検証\n\nArgs:\n    value: 検証する日付文字列\n    format_str: 日付フォーマット\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: 日付形式が不正な場合\n\n**内部で定義される名前:**\n- `validate_date`\n\n\n### メソッド: `@staticmethod validate_dict_schema(value: Dict[str, Any] [✅], schema: Dict[str, Dict[str, Any]] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 辞書のスキーマを検証\n\nArgs:\n    value: 検証する辞書\n    schema: スキーマ定義\n    path: エラーメッセージ用のパス\n    \nスキーマの例:\n    {\n        \"name\": {\"type\": str, \"required\": True},\n        \"age\": {\"type\": int, \"required\": True, \"min\": 0, \"max\": 120},\n        \"email\": {\"type\": str, \"required\": False, \"validator\": validate_email}\n    }\n    \nRaises:\n    ValidationError: スキーマに適合しない場合\n\n**内部で定義される名前:**\n- `expected_type`\n- `field_path`\n- `field_schema`\n- `is_required`\n- `max_length`\n- `max_value`\n- `min_length`\n- `min_value`\n- `valid_values`\n- `validate_dict_schema`\n- `validator`\n\n\n### メソッド: `@staticmethod validate_list_items(value: List[Any] [✅], item_validator: Callable[[Any, str], None] [✅], path: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: リストの各項目を検証\n\nArgs:\n    value: 検証するリスト\n    item_validator: 各項目を検証する関数\n    path: エラーメッセージ用のパス\n    \nRaises:\n    ValidationError: いずれかの項目が検証エラーになった場合\n\n**内部で定義される名前:**\n- `item_path`\n- `validate_list_items`\n\n\n## 関数: `validate_positive_int(item: Any [✅], path: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `validate_positive_int`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/validator.py",
            "name": "Validator",
            "type": "class",
            "issue": "too_long",
            "lines": 251,
            "limit": 100,
            "lineno": 15
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/validator.py:329: error: Function is missing a type annotation  [no-untyped-def]\nFound 1 error in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "snippet/utils/logger/basic_usage.py": {
      "file_path": "snippet/utils/logger/basic_usage.py",
      "timestamp": "2025-04-09T21:36:41.617725",
      "structure": "# basic_usage.py の解析結果\n\n## インポート一覧\n- `contextual_logger.get_logger` (✅ 使用あり)\n- `os` (❌ 未使用)\n- `time` (✅ 使用あり)\n\n## クラス: `UserService`\n\n### メソッド: `__init__(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `get_user(self: Any [✅], user_id: Any [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `get_user`\n\n\n## 関数: `basic_usage() -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `basic_usage`\n- `logger`\n\n\n## 関数: `exception_example() -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `exception_example`\n- `logger`\n- `result`\n\n\n## 関数: `decorator_example() -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `decorator_example`\n- `logger`\n- `result`\n- `slow_database_query`\n\n\n## 関数: `security_example() -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `logger`\n- `security_example`\n\n\n## 関数: `@logger.log_execution_time slow_database_query(query_id: Any [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `slow_database_query`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/utils/logger/basic_usage.py:4: error: Cannot find implementation or library stub for module named \"contextual_logger\"  [import-not-found]\nsnippet/utils/logger/basic_usage.py:4: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nsnippet/utils/logger/basic_usage.py:12: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:12: note: Use \"-> None\" if function does not return a value\nsnippet/utils/logger/basic_usage.py:29: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:29: note: Use \"-> None\" if function does not return a value\nsnippet/utils/logger/basic_usage.py:46: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:50: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:62: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:62: note: Use \"-> None\" if function does not return a value\nsnippet/utils/logger/basic_usage.py:66: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:73: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:73: note: Use \"-> None\" if function does not return a value\nFound 8 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "snippet/cli.py": {
      "file_path": "snippet/cli.py",
      "timestamp": "2025-04-09T21:36:39.536026",
      "structure": "# cli.py の解析結果\n\n## インポート一覧\n- `analytics.code_analyzer.CodeAnalyzer` (✅ 使用あり)\n- `analytics.code_analyzer.analyze_directory` (❌ 未使用)\n- `analytics.code_analyzer.analyze_file` (✅ 使用あり)\n- `analytics.report_generator.generate_report` (✅ 使用あり)\n- `analytics.report_generator.save_report` (✅ 使用あり)\n- `analytics.validator_integration.validate_functions` (✅ 使用あり)\n- `argparse` (✅ 使用あり)\n- `concurrent.futures` (❌ 未使用)\n- `importlib.util` (❌ 未使用)\n- `json` (✅ 使用あり)\n- `os` (✅ 使用あり)\n- `pathlib.Path` (❌ 未使用)\n- `sys` (✅ 使用あり)\n- `tqdm.tqdm` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Tuple` (❌ 未使用)\n\n## 関数: `generate_enhanced_report(code_analysis_results: Dict[str, Any] [✅], validator_results: Optional[Dict[str, Any]] [✅], output_file: str [✅], format: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: コード分析と関数検証の結果を統合したレポートを生成\n\nArgs:\n    code_analysis_results: コード分析の結果\n    validator_results: 関数検証の結果（オプション）\n    output_file: 出力ファイルパス（省略時は返すだけ）\n    format: 出力フォーマット\n\nReturns:\n    生成されたレポート、または保存したファイルパス\n\n**内部で定義される名前:**\n- `combined_results`\n- `generate_enhanced_report`\n- `report`\n- `validator_report`\n\n\n## 関数: `_generate_validator_report(results: Dict[str, Any] [✅], format: str [✅]) -> str` [✅ 使用あり]\n**Docstring**: 関数検証結果のレポートを生成\n\nArgs:\n    results: 関数検証の結果\n    format: 出力フォーマット\n\nReturns:\n    フォーマット済みレポート\n\n**内部で定義される名前:**\n- `_generate_validator_report`\n- `classes`\n- `functions`\n- `issue_type`\n- `issues`\n- `message`\n- `method_issues`\n- `methods`\n- `report`\n- `stats`\n- `status`\n\n\n## 関数: `analyze_files_parallel(files: List[str] [✅], max_lines: int [✅], max_nest_level: int [✅], max_workers: int [✅]) -> Dict[str, Any]` [❌ 未使用]\n**Docstring**: 複数のファイルを並列で分析\n\nArgs:\n    files: 分析するファイルのリスト\n    max_lines: 関数の最大行数閾値\n    max_nest_level: 最大ネストレベル閾値\n    max_workers: 並列処理の最大ワーカー数（Noneの場合はCPUコア数）\n\nReturns:\n    分析結果の辞書\n\n**内部で定義される名前:**\n- `analyze_files_parallel`\n- `file_path`\n- `file_result`\n- `future_to_file`\n- `results`\n\n\n## 関数: `main(args: Optional[List[str]] [✅]) -> int` [✅ 使用あり]\n**Docstring**: コマンドライン実行のメインエントリーポイント\n\nArgs:\n    args: コマンドライン引数（テスト用、通常はNone）\n    \nReturns:\n    終了コード\n\n**内部で定義される名前:**\n- `analyze_parser`\n- `analyzer`\n- `args`\n- `check_parser`\n- `code_analysis_results`\n- `enhanced_parser`\n- `main`\n- `output_file`\n- `parser`\n- `path`\n- `report_parser`\n- `results`\n- `save_data`\n- `stats`\n- `subparsers`\n- `summary`\n- `validate_parser`\n- `validator_report`\n- `validator_results`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/cli.py",
            "name": "_generate_validator_report",
            "type": "function",
            "issue": "too_long",
            "lines": 123,
            "limit": 100,
            "lineno": 87
          },
          {
            "file": "snippet/cli.py",
            "name": "_generate_validator_report",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 12,
            "limit": 4,
            "lineno": 87
          },
          {
            "file": "snippet/cli.py",
            "name": "analyze_files_parallel",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 5,
            "limit": 4,
            "lineno": 212
          },
          {
            "file": "snippet/cli.py",
            "name": "main",
            "type": "function",
            "issue": "too_long",
            "lines": 265,
            "limit": 100,
            "lineno": 275
          },
          {
            "file": "snippet/cli.py",
            "name": "main",
            "type": "function",
            "issue": "too_nested",
            "nest_level": 6,
            "limit": 4,
            "lineno": 275
          }
        ],
        "issue_count": 5
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/cli.py:15: error: Library stubs not installed for \"tqdm\"  [import-untyped]\nsnippet/cli.py:15: note: Hint: \"python3 -m pip install types-tqdm\"\nsnippet/cli.py:15: note: (or run \"mypy --install-types\" to install all missing stub packages)\nsnippet/cli.py:15: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nsnippet/cli.py:28: error: Incompatible default for argument \"output_file\" (default has type \"None\", argument has type \"str\")  [assignment]\nsnippet/cli.py:28: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsnippet/cli.py:28: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsnippet/cli.py:215: error: Incompatible default for argument \"max_workers\" (default has type \"None\", argument has type \"int\")  [assignment]\nsnippet/cli.py:215: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsnippet/cli.py:215: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsnippet/cli.py:254: error: Unsupported target for indexed assignment (\"dict[str, int] | None\")  [index]\nsnippet/cli.py:254: error: Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"int\")  [assignment]\nsnippet/cli.py:258: error: Value of type \"dict[str, int] | None\" is not indexable  [index]\nsnippet/cli.py:258: error: Unsupported target for indexed assignment (\"dict[str, int] | None\")  [index]\nsnippet/cli.py:259: error: Value of type \"dict[str, int] | None\" is not indexable  [index]\nsnippet/cli.py:259: error: Unsupported target for indexed assignment (\"dict[str, int] | None\")  [index]\nsnippet/cli.py:261: error: Unsupported target for indexed assignment (\"dict[str, int] | None\")  [index]\nsnippet/cli.py:265: error: Unsupported target for indexed assignment (\"dict[str, int] | None\")  [index]\nsnippet/cli.py:265: error: Incompatible types in assignment (expression has type \"dict[str, str]\", target has type \"int\")  [assignment]\nsnippet/cli.py:341: error: Incompatible types in assignment (expression has type \"Namespace\", variable has type \"list[str] | None\")  [assignment]\nsnippet/cli.py:344: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:344: error: Item \"None\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:345: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:345: error: Item \"None\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:352: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"max_lines\"  [union-attr]\nsnippet/cli.py:352: error: Item \"None\" of \"list[str] | None\" has no attribute \"max_lines\"  [union-attr]\nsnippet/cli.py:353: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"max_nest\"  [union-attr]\nsnippet/cli.py:353: error: Item \"None\" of \"list[str] | None\" has no attribute \"max_nest\"  [union-attr]\nsnippet/cli.py:360: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"max_lines\"  [union-attr]\nsnippet/cli.py:360: error: Item \"None\" of \"list[str] | None\" has no attribute \"max_lines\"  [union-attr]\nsnippet/cli.py:361: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"max_nest\"  [union-attr]\nsnippet/cli.py:361: error: Item \"None\" of \"list[str] | None\" has no attribute \"max_nest\"  [union-attr]\nsnippet/cli.py:362: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"skip_quality_checks\"  [union-attr]\nsnippet/cli.py:362: error: Item \"None\" of \"list[str] | None\" has no attribute \"skip_quality_checks\"  [union-attr]\nsnippet/cli.py:367: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"patterns\"  [union-attr]\nsnippet/cli.py:367: error: Item \"None\" of \"list[str] | None\" has no attribute \"patterns\"  [union-attr]\nsnippet/cli.py:368: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"recursive\"  [union-attr]\nsnippet/cli.py:368: error: Item \"None\" of \"list[str] | None\" has no attribute \"recursive\"  [union-attr]\nsnippet/cli.py:375: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"validate_functions\"  [union-attr]\nsnippet/cli.py:375: error: Item \"None\" of \"list[str] | None\" has no attribute \"validate_functions\"  [union-attr]\nsnippet/cli.py:384: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:384: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:392: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:392: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:393: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:393: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:396: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:396: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:399: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:399: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:400: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:400: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:405: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:405: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:406: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:406: error: Item \"None\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:409: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:409: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:409: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:409: error: Item \"None\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:435: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:435: error: Item \"None\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:436: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:436: error: Item \"None\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:441: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"test_count\"  [union-attr]\nsnippet/cli.py:441: error: Item \"None\" of \"list[str] | None\" has no attribute \"test_count\"  [union-attr]\nsnippet/cli.py:445: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:445: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:447: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:447: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:449: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:449: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:452: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:452: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:453: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:453: error: Item \"None\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:455: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:455: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:457: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:457: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:477: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:477: error: Item \"None\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:481: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"code_analysis\"  [union-attr]\nsnippet/cli.py:481: error: Item \"None\" of \"list[str] | None\" has no attribute \"code_analysis\"  [union-attr]\nsnippet/cli.py:486: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"validator_results\"  [union-attr]\nsnippet/cli.py:486: error: Item \"None\" of \"list[str] | None\" has no attribute \"validator_results\"  [union-attr]\nsnippet/cli.py:487: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"validator_results\"  [union-attr]\nsnippet/cli.py:487: error: Item \"None\" of \"list[str] | None\" has no attribute \"validator_results\"  [union-attr]\nsnippet/cli.py:494: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:494: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:495: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:495: error: Item \"None\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:501: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:501: error: Item \"None\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:503: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"results\"  [union-attr]\nsnippet/cli.py:503: error: Item \"None\" of \"list[str] | None\" has no attribute \"results\"  [union-attr]\nsnippet/cli.py:504: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"results\"  [union-attr]\nsnippet/cli.py:504: error: Item \"None\" of \"list[str] | None\" has no attribute \"results\"  [union-attr]\nsnippet/cli.py:505: error: Name \"json\" is used before definition  [used-before-def]\nsnippet/cli.py:507: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:507: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:507: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:507: error: Item \"None\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:511: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:511: error: Item \"None\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:513: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:513: error: Item \"None\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:521: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"patterns\"  [union-attr]\nsnippet/cli.py:521: error: Item \"None\" of \"list[str] | None\" has no attribute \"patterns\"  [union-attr]\nsnippet/cli.py:522: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"recursive\"  [union-attr]\nsnippet/cli.py:522: error: Item \"None\" of \"list[str] | None\" has no attribute \"recursive\"  [union-attr]\nFound 104 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "snippet/testing/test_all.py": {
      "file_path": "snippet/testing/test_all.py",
      "timestamp": "2025-04-09T21:36:39.691356",
      "structure": "# test_all.py の解析結果\n\n## インポート一覧\n- `datetime.date` (✅ 使用あり)\n- `datetime.datetime` (❌ 未使用)\n- `json` (❌ 未使用)\n- `logger.contextual_logger.ContextualLogger` (✅ 使用あり)\n- `logger.contextual_logger.get_logger` (❌ 未使用)\n- `os` (✅ 使用あり)\n- `pathlib.Path` (✅ 使用あり)\n- `save_file_structure.format_file_structure` (✅ 使用あり)\n- `save_file_structure.save_file_structure` (✅ 使用あり)\n- `scripts.code_complexity_checker.CodeComplexityChecker` (✅ 使用あり)\n- `shutil` (✅ 使用あり)\n- `snippet.utils.env_loader.EnvLoader` (✅ 使用あり)\n- `snippet.utils.exception_handler.exception_handler` (✅ 使用あり)\n- `snippet.utils.input_sanitizer.InputSanitizer` (✅ 使用あり)\n- `snippet.utils.logger.config_manage.ConfigManager` (✅ 使用あり)\n- `tempfile` (✅ 使用あり)\n- `test_data_generator.Factory` (❌ 未使用)\n- `test_data_generator.TestDataGenerator` (✅ 使用あり)\n- `unittest` (✅ 使用あり)\n- `validator.ValidationError` (✅ 使用あり)\n- `validator.Validator` (✅ 使用あり)\n- `yaml` (✅ 使用あり)\n\n## クラス: `TestInputSanitizer` (unittest.TestCase)\n\n### メソッド: `setUp(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `setUp`\n\n\n### メソッド: `test_sanitize_html(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `html`\n- `sanitized`\n- `test_sanitize_html`\n\n\n### メソッド: `test_strip_tags(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `html`\n- `stripped`\n- `test_strip_tags`\n\n\n### メソッド: `test_sanitize_sql(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `sanitized`\n- `sql`\n- `test_sanitize_sql`\n\n\n### メソッド: `test_sanitize_filename(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `filename`\n- `sanitized`\n- `test_sanitize_filename`\n\n\n### メソッド: `test_sanitize_email(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `invalid_email`\n- `test_sanitize_email`\n- `valid_email`\n\n\n## クラス: `TestEnvLoader` (unittest.TestCase)\n\n### メソッド: `setUp(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `setUp`\n\n\n### メソッド: `tearDown(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `tearDown`\n\n\n### メソッド: `test_load_env_file(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `env_content`\n- `loaded_vars`\n- `test_load_env_file`\n\n\n## クラス: `TestValidator` (unittest.TestCase)\n\n### メソッド: `test_validate_type(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `test_validate_type`\n\n\n### メソッド: `test_validate_length(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `test_validate_length`\n\n\n### メソッド: `test_validate_range(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `test_validate_range`\n\n\n### メソッド: `test_validate_email(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `test_validate_email`\n\n\n## クラス: `TestDataGeneratorTests` (unittest.TestCase)\n\n### メソッド: `setUp(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `setUp`\n\n\n### メソッド: `test_random_string(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `string1`\n- `string2`\n- `test_random_string`\n\n\n### メソッド: `test_random_email(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `email`\n- `test_random_email`\n\n\n### メソッド: `test_random_date(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `date_obj`\n- `test_random_date`\n\n\n### メソッド: `test_random_phone(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `phone`\n- `test_random_phone`\n\n\n## クラス: `TestCodeComplexityChecker` (unittest.TestCase)\n\n### メソッド: `setUp(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `setUp`\n\n\n### メソッド: `test_simple_code(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `code`\n- `test_simple_code`\n\n\n### メソッド: `test_complex_code(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `code`\n- `test_complex_code`\n\n\n## クラス: `TestExceptionHandler` (unittest.TestCase)\n\n### メソッド: `test_exception_handling(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `divide`\n- `result`\n- `test_exception_handling`\n\n\n### メソッド: `test_exception_reraising(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `divide`\n- `test_exception_reraising`\n\n\n## クラス: `TestContextualLogger` (unittest.TestCase)\n\n### メソッド: `setUp(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `setUp`\n\n\n### メソッド: `tearDown(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `tearDown`\n\n\n### メソッド: `test_logging_levels(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `app_log_dir`\n- `error_log_dir`\n- `test_logging_levels`\n\n\n## クラス: `TestConfigManager` (unittest.TestCase)\n\n### メソッド: `setUp(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `setUp`\n\n\n### メソッド: `tearDown(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `tearDown`\n\n\n### メソッド: `test_load_config(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `config`\n- `test_load_config`\n\n\n### メソッド: `test_get_config_value(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `test_get_config_value`\n\n\n### メソッド: `test_set_config_value(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `test_set_config_value`\n\n\n## クラス: `TestSaveFileStructure` (unittest.TestCase)\n\n### メソッド: `setUp(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `setUp`\n\n\n### メソッド: `tearDown(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `tearDown`\n\n\n### メソッド: `test_format_file_structure(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `files`\n- `structure`\n- `test_format_file_structure`\n\n\n### メソッド: `test_save_file_structure(self: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `content`\n- `output_file`\n- `test_save_file_structure`\n\n\n## 関数: `@exception_handler(reraise=False, default_return=0) divide(a: Any [✅], b: Any [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `divide`\n\n\n## 関数: `@exception_handler(reraise=True) divide(a: Any [✅], b: Any [✅]) -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `divide`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/testing/test_all.py:5: error: Library stubs not installed for \"yaml\"  [import-untyped]\nsnippet/testing/test_all.py:5: note: Hint: \"python3 -m pip install types-PyYAML\"\nsnippet/testing/test_all.py:5: note: (or run \"mypy --install-types\" to install all missing stub packages)\nsnippet/testing/test_all.py:9: error: Skipping analyzing \"snippet.utils.logger.config_manage\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nsnippet/testing/test_all.py:9: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nsnippet/testing/test_all.py:12: error: Cannot find implementation or library stub for module named \"validator\"  [import-not-found]\nsnippet/testing/test_all.py:13: error: Cannot find implementation or library stub for module named \"test_data_generator\"  [import-not-found]\nsnippet/testing/test_all.py:14: error: Cannot find implementation or library stub for module named \"scripts.code_complexity_checker\"  [import-not-found]\nsnippet/testing/test_all.py:16: error: Cannot find implementation or library stub for module named \"logger.contextual_logger\"  [import-not-found]\nsnippet/testing/test_all.py:20: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:20: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:23: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:23: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:28: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:28: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:33: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:33: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:39: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:39: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:45: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:45: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:53: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:53: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:57: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:57: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:61: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:61: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:83: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:83: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:89: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:89: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:96: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:96: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:103: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:103: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:110: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:110: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:113: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:113: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:119: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:119: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:124: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:124: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:128: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:128: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:135: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:135: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:138: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:138: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:146: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:146: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:159: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:161: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:167: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:169: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:177: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:177: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:181: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:181: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:185: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:185: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:198: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:198: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:233: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:233: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:237: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:237: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:248: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:248: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:259: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:259: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:272: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:272: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:294: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:294: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:299: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:299: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:300: error: Cannot find implementation or library stub for module named \"save_file_structure\"  [import-not-found]\nsnippet/testing/test_all.py:321: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:321: note: Use \"-> None\" if function does not return a value\nFound 44 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "tests/test_utils/__init__.py": {
      "file_path": "tests/test_utils/__init__.py",
      "timestamp": "2025-04-09T21:36:43.085077",
      "structure": "# __init__.py の解析結果\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": true,
        "issues": []
      }
    },
    "snippet/utils/logger/contextual_logger.py": {
      "file_path": "snippet/utils/logger/contextual_logger.py",
      "timestamp": "2025-04-09T21:36:41.652943",
      "structure": "# contextual_logger.py の解析結果\n\n## インポート一覧\n- `datetime.datetime` (✅ 使用あり)\n- `functools.wraps` (✅ 使用あり)\n- `inspect` (✅ 使用あり)\n- `json` (✅ 使用あり)\n- `logging` (✅ 使用あり)\n- `logging.handlers.RotatingFileHandler` (✅ 使用あり)\n- `os` (✅ 使用あり)\n- `time` (✅ 使用あり)\n- `traceback` (✅ 使用あり)\n\n## クラス: `ContextualLogger`\n**Docstring**: コンテキスト情報（ファイル名、関数名、行番号）を自動的に付加する\n構造化ロガークラス。JSON形式でログを出力し、ログレベルを一括制御できる。\n\n### メソッド: `__init__(self: Any [✅], name: Any [✅], log_dir: Any [✅], log_level: Any [✅], max_bytes: Any [✅], backup_count: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: ロガーの初期化\n\nArgs:\n    name (str, optional): ロガー名。指定しない場合は呼び出し元モジュール名\n    log_dir (str): ログファイルを保存するディレクトリ\n    log_level (int): デフォルトのログレベル\n    max_bytes (int): ログファイルの最大サイズ\n    backup_count (int): 保持するバックアップファイル数\n\n**内部で定義される名前:**\n- `__init__`\n- `app_handler`\n- `app_log_file`\n- `app_log_path`\n- `console_handler`\n- `error_handler`\n- `error_log_file`\n- `error_log_path`\n- `frame`\n- `module`\n- `name`\n\n\n### メソッド: `_get_context_info(self: Any [❌]) -> None` [✅ 使用あり]\n**Docstring**: 呼び出し元のコンテキスト情報（ファイル名、関数名、行番号）を取得\n\n**内部で定義される名前:**\n- `_get_context_info`\n- `filename`\n- `frame`\n- `function_name`\n- `line_number`\n\n\n### メソッド: `_format_log(self: Any [✅], message: Any [✅], level: Any [✅], extra: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: ログメッセージをJSON形式に整形\n\n**内部で定義される名前:**\n- `_format_log`\n- `log_data`\n- `masked_extra`\n\n\n### メソッド: `_mask_sensitive_data(self: Any [❌], data: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: 機密情報をマスク処理\n\n**内部で定義される名前:**\n- `_mask_sensitive_data`\n- `masked_data`\n- `sensitive_keys`\n\n\n### メソッド: `debug(self: Any [✅], message: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: DEBUGレベルのログ出力\n\n**内部で定義される名前:**\n- `debug`\n\n\n### メソッド: `info(self: Any [✅], message: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: INFOレベルのログ出力\n\n**内部で定義される名前:**\n- `info`\n\n\n### メソッド: `warning(self: Any [✅], message: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: WARNINGレベルのログ出力\n\n**内部で定義される名前:**\n- `warning`\n\n\n### メソッド: `error(self: Any [✅], message: Any [✅], exc_info: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: ERRORレベルのログ出力。例外情報も記録可能\n\n**内部で定義される名前:**\n- `error`\n\n\n### メソッド: `critical(self: Any [✅], message: Any [✅], exc_info: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: CRITICALレベルのログ出力。例外情報も記録可能\n\n**内部で定義される名前:**\n- `critical`\n\n\n### メソッド: `set_level(self: Any [✅], level: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: ログレベルを変更\n\n**内部で定義される名前:**\n- `set_level`\n\n\n### メソッド: `log_execution_time(self: Any [✅], func: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: 関数の実行時間をログに記録するデコレーター\n\n**内部で定義される名前:**\n- `execution_time`\n- `log_execution_time`\n- `result`\n- `start_time`\n- `wrapper`\n\n\n## 関数: `get_logger(name: Any [✅], log_dir: Any [✅], log_level: Any [✅]) -> None` [✅ 使用あり]\n**Docstring**: アプリケーション全体で利用可能なロガーインスタンスを取得\n\n**内部で定義される名前:**\n- `get_logger`\n- `log_level`\n- `log_level_name`\n\n\n## 関数: `@logger.log_execution_time slow_function() -> None` [✅ 使用あり]\n\n**内部で定義される名前:**\n- `slow_function`\n\n\n## 関数: `@wraps(func) wrapper() -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `execution_time`\n- `result`\n- `start_time`\n- `wrapper`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/utils/logger/contextual_logger.py",
            "name": "ContextualLogger",
            "type": "class",
            "issue": "too_long",
            "lines": 158,
            "limit": 100,
            "lineno": 12
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/utils/logger/contextual_logger.py:18: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:79: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:81: error: Item \"None\" of \"FrameType | None\" has no attribute \"f_back\"  [union-attr]\nsnippet/utils/logger/contextual_logger.py:81: error: Item \"None\" of \"FrameType | Any | None\" has no attribute \"f_back\"  [union-attr]\nsnippet/utils/logger/contextual_logger.py:82: error: Item \"None\" of \"FrameType | Any | None\" has no attribute \"f_code\"  [union-attr]\nsnippet/utils/logger/contextual_logger.py:83: error: Item \"None\" of \"FrameType | Any | None\" has no attribute \"f_code\"  [union-attr]\nsnippet/utils/logger/contextual_logger.py:84: error: Item \"None\" of \"FrameType | Any | None\" has no attribute \"f_lineno\"  [union-attr]\nsnippet/utils/logger/contextual_logger.py:94: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:108: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:121: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:125: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:129: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:133: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:140: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:147: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:155: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:158: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:173: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:202: error: Function is missing a return type annotation  [no-untyped-def]\nFound 19 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "snippet/utils/safe_file_ops.py": {
      "file_path": "snippet/utils/safe_file_ops.py",
      "timestamp": "2025-04-09T21:36:41.750589",
      "structure": "# safe_file_ops.py の解析結果\n\n## インポート一覧\n- `csv` (✅ 使用あり)\n- `hashlib` (✅ 使用あり)\n- `json` (✅ 使用あり)\n- `os` (✅ 使用あり)\n- `pathlib.Path` (✅ 使用あり)\n- `shutil` (✅ 使用あり)\n- `tempfile` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Callable` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Union` (✅ 使用あり)\n\n## クラス: `FileOperationError` (Exception)\n**Docstring**: ファイル操作に関するエラー\n\n## クラス: `SafeFileOps`\n**Docstring**: 安全なファイル操作を提供するユーティリティクラス\n一時ファイルを使った安全な書き込み処理とエラーハンドリングを提供\n\n### メソッド: `@staticmethod safe_read(file_path: Union[str, Path] [✅], encoding: str [✅], default: Any [✅]) -> str` [✅ 使用あり]\n**Docstring**: 安全にファイルを読み込む\n\nArgs:\n    file_path: 読み込むファイルのパス\n    encoding: 文字エンコーディング\n    default: エラー時のデフォルト値\n    \nReturns:\n    ファイルの内容\n    \nRaises:\n    FileOperationError: デフォルト値が指定されておらず、ファイル読み込みに失敗した場合\n\n**内部で定義される名前:**\n- `safe_read`\n\n\n### メソッド: `@staticmethod safe_write(file_path: Union[str, Path] [✅], content: str [✅], encoding: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: 安全にファイルに書き込む（一時ファイルを使用）\n\nArgs:\n    file_path: 書き込み先ファイルのパス\n    content: 書き込む内容\n    encoding: 文字エンコーディング\n    \nRaises:\n    FileOperationError: ファイル書き込みに失敗した場合\n\n**内部で定義される名前:**\n- `file_path`\n- `safe_write`\n- `temp_dir`\n- `tmp_path`\n\n\n### メソッド: `@staticmethod safe_append(file_path: Union[str, Path] [✅], content: str [✅], encoding: str [✅]) -> None` [❌ 未使用]\n**Docstring**: 安全にファイルに追記する\n\nArgs:\n    file_path: 追記先ファイルのパス\n    content: 追記する内容\n    encoding: 文字エンコーディング\n    \nRaises:\n    FileOperationError: ファイル追記に失敗した場合\n\n**内部で定義される名前:**\n- `file_path`\n- `safe_append`\n\n\n### メソッド: `@staticmethod safe_delete(file_path: Union[str, Path] [✅]) -> bool` [❌ 未使用]\n**Docstring**: 安全にファイルを削除する\n\nArgs:\n    file_path: 削除するファイルのパス\n    \nReturns:\n    削除が成功したかどうか\n    \nRaises:\n    FileOperationError: ファイル削除に失敗した場合\n\n**内部で定義される名前:**\n- `safe_delete`\n\n\n### メソッド: `@staticmethod safe_rename(src_path: Union[str, Path] [✅], dst_path: Union[str, Path] [✅]) -> None` [❌ 未使用]\n**Docstring**: 安全にファイルをリネーム/移動する\n\nArgs:\n    src_path: 元のファイルパス\n    dst_path: 移動先のファイルパス\n    \nRaises:\n    FileOperationError: ファイル移動に失敗した場合\n\n**内部で定義される名前:**\n- `dst_path`\n- `safe_rename`\n\n\n### メソッド: `@staticmethod safe_copy(src_path: Union[str, Path] [✅], dst_path: Union[str, Path] [✅]) -> None` [✅ 使用あり]\n**Docstring**: 安全にファイルをコピーする\n\nArgs:\n    src_path: コピー元のファイルパス\n    dst_path: コピー先のファイルパス\n    \nRaises:\n    FileOperationError: ファイルコピーに失敗した場合\n\n**内部で定義される名前:**\n- `dst_path`\n- `safe_copy`\n\n\n### メソッド: `@staticmethod read_json(file_path: Union[str, Path] [✅], encoding: str [✅], default: Optional[Any] [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: JSONファイルを読み込む\n\nArgs:\n    file_path: 読み込むJSONファイルのパス\n    encoding: 文字エンコーディング\n    default: ファイルが存在しない場合のデフォルト値\n    \nReturns:\n    JSONデータ（辞書）\n    \nRaises:\n    FileOperationError: デフォルト値が指定されておらず、ファイル読み込みに失敗した場合\n\n**内部で定義される名前:**\n- `read_json`\n\n\n### メソッド: `@staticmethod write_json(file_path: Union[str, Path] [✅], data: Dict[str, Any] [✅], encoding: str [✅], indent: int [✅]) -> None` [✅ 使用あり]\n**Docstring**: JSONファイルに書き込む\n\nArgs:\n    file_path: 書き込み先JSONファイルのパス\n    data: 書き込むデータ（辞書）\n    encoding: 文字エンコーディング\n    indent: JSONのインデントスペース数\n    \nRaises:\n    FileOperationError: ファイル書き込みに失敗した場合\n\n**内部で定義される名前:**\n- `content`\n- `write_json`\n\n\n### メソッド: `@staticmethod read_csv(file_path: Union[str, Path] [✅], encoding: str [✅], delimiter: str [✅], has_header: bool [✅]) -> List[Dict[str, str]]` [✅ 使用あり]\n**Docstring**: CSVファイルを読み込む\n\nArgs:\n    file_path: 読み込むCSVファイルのパス\n    encoding: 文字エンコーディング\n    delimiter: 区切り文字\n    has_header: ヘッダー行があるかどうか\n    \nReturns:\n    CSVデータ（辞書のリスト）\n    \nRaises:\n    FileOperationError: ファイル読み込みに失敗した場合\n\n**内部で定義される名前:**\n- `data`\n- `read_csv`\n- `reader`\n\n\n### メソッド: `@staticmethod write_csv(file_path: Union[str, Path] [✅], data: List[Dict[str, Any]] [✅], fieldnames: Optional[List[str]] [✅], encoding: str [✅], delimiter: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: CSVファイルに書き込む\n\nArgs:\n    file_path: 書き込み先CSVファイルのパス\n    data: 書き込むデータ（辞書のリスト）\n    fieldnames: 列名のリスト（None の場合は最初の辞書のキーを使用）\n    encoding: 文字エンコーディング\n    delimiter: 区切り文字\n    \nRaises:\n    FileOperationError: ファイル書き込みに失敗した場合\n\n**内部で定義される名前:**\n- `fieldnames`\n- `file_path`\n- `temp_dir`\n- `tmp_path`\n- `write_csv`\n- `writer`\n\n\n### メソッド: `@staticmethod get_file_hash(file_path: Union[str, Path] [✅], algorithm: str [✅], chunk_size: int [✅]) -> str` [✅ 使用あり]\n**Docstring**: ファイルのハッシュ値を計算\n\nArgs:\n    file_path: ハッシュ値を計算するファイルのパス\n    algorithm: ハッシュアルゴリズム（md5, sha1, sha256 など）\n    chunk_size: 一度に読み込むバイト数\n    \nReturns:\n    ハッシュ値（16進数文字列）\n    \nRaises:\n    FileOperationError: ファイル読み込みに失敗した場合\n\n**内部で定義される名前:**\n- `get_file_hash`\n- `hasher`\n\n\n### メソッド: `@staticmethod process_file_safely(file_path: Union[str, Path] [✅], processor: Callable[[str], str] [✅], encoding: str [✅]) -> None` [✅ 使用あり]\n**Docstring**: ファイルを安全に処理する\n\nArgs:\n    file_path: 処理するファイルのパス\n    processor: ファイルの内容を処理する関数\n    encoding: 文字エンコーディング\n    \nRaises:\n    FileOperationError: ファイル処理に失敗した場合\n\n**内部で定義される名前:**\n- `content`\n- `process_file_safely`\n- `processed_content`\n\n\n## 関数: `uppercase_processor(content: Any [✅]) -> None` [❌ 未使用]\n\n**内部で定義される名前:**\n- `uppercase_processor`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "snippet/utils/safe_file_ops.py",
            "name": "SafeFileOps",
            "type": "class",
            "issue": "too_long",
            "lines": 329,
            "limit": 100,
            "lineno": 16
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "snippet/utils/safe_file_ops.py:43: error: Returning Any from function declared to return \"str\"  [no-any-return]\nsnippet/utils/safe_file_ops.py:189: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nsnippet/utils/safe_file_ops.py:192: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nsnippet/utils/safe_file_ops.py:238: error: Incompatible types in assignment (expression has type \"Reader\", variable has type \"DictReader[str]\")  [assignment]\nsnippet/utils/safe_file_ops.py:413: error: Function is missing a type annotation  [no-untyped-def]\nFound 5 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "obsidian_concierge/utils/__init__.py": {
      "file_path": "obsidian_concierge/utils/__init__.py",
      "timestamp": "2025-04-09T21:36:39.534200",
      "structure": "# __init__.py の解析結果\n\n## インポート一覧\n- `config.AppConfig` (❌ 未使用)\n- `config.config` (❌ 未使用)\n- `config.load_config` (❌ 未使用)\n- `fs.ensure_dir` (❌ 未使用)\n- `fs.get_file_extension` (❌ 未使用)\n- `fs.get_file_size` (❌ 未使用)\n- `fs.is_text_file` (❌ 未使用)\n- `fs.list_files` (❌ 未使用)\n- `fs.safe_remove` (❌ 未使用)\n- `logging.LogConfig` (❌ 未使用)\n- `logging.logger` (❌ 未使用)\n- `logging.setup_logging` (❌ 未使用)\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          }
        ]
      }
    },
    "obsidian_concierge/utils/logging.py": {
      "file_path": "obsidian_concierge/utils/logging.py",
      "timestamp": "2025-04-09T21:36:39.534658",
      "structure": "# logging.py の解析結果\n\n## インポート一覧\n- `logging` (✅ 使用あり)\n- `logging.handlers` (❌ 未使用)\n- `os` (❌ 未使用)\n- `pathlib.Path` (✅ 使用あり)\n- `pydantic.BaseModel` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n\n## クラス: `LogConfig` (BaseModel)\n**Docstring**: Configuration model for logging settings.\n\n## 関数: `setup_logging(config: LogConfig [✅]) -> logging.Logger` [✅ 使用あり]\n**Docstring**: Set up logging configuration for the application.\n\nArgs:\n    config: LogConfig instance containing logging configuration\n    \nReturns:\n    Configured logger instance\n\n**内部で定義される名前:**\n- `console_handler`\n- `file_handler`\n- `formatter`\n- `log_dir`\n- `logger`\n- `setup_logging`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          }
        ]
      }
    },
    "obsidian_concierge/utils/config.py": {
      "file_path": "obsidian_concierge/utils/config.py",
      "timestamp": "2025-04-09T21:36:39.534353",
      "structure": "# config.py の解析結果\n\n## インポート一覧\n- `os` (✅ 使用あり)\n- `pathlib.Path` (✅ 使用あり)\n- `pydantic.BaseModel` (✅ 使用あり)\n- `pydantic.Field` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `yaml` (✅ 使用あり)\n\n## クラス: `AppConfig` (BaseModel)\n**Docstring**: Application configuration model.\n\n## 関数: `load_config(config_path: Optional[str] [✅]) -> AppConfig` [✅ 使用あり]\n**Docstring**: Load application configuration.\n\nArgs:\n    config_path: Path to YAML configuration file\n    \nReturns:\n    Application configuration\n\n**内部で定義される名前:**\n- `config_data`\n- `config_path`\n- `env_value`\n- `load_config`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Mypy型チェック",
            "error": "obsidian_concierge/utils/config.py:12: error: Library stubs not installed for \"yaml\"  [import-untyped]\nobsidian_concierge/utils/config.py:12: note: Hint: \"python3 -m pip install types-PyYAML\"\nobsidian_concierge/utils/config.py:12: note: (or run \"mypy --install-types\" to install all missing stub packages)\nobsidian_concierge/utils/config.py:12: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nobsidian_concierge/utils/config.py:70: error: Need type annotation for \"config_data\" (hint: \"config_data: dict[<type>, <type>] = ...\")  [var-annotated]\nobsidian_concierge/utils/config.py:74: error: Incompatible types in assignment (expression has type \"Path\", variable has type \"str | None\")  [assignment]\nobsidian_concierge/utils/config.py:75: error: \"str\" has no attribute \"exists\"  [attr-defined]\nobsidian_concierge/utils/config.py:82: error: \"Callable[[BaseModel], dict[str, FieldInfo]]\" has no attribute \"__iter__\" (not iterable)  [attr-defined]\nobsidian_concierge/utils/config.py:87: error: Argument 1 to \"AppConfig\" has incompatible type \"**dict[Any, str]\"; expected \"int\"  [arg-type]\nFound 6 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "obsidian_concierge/utils/fs.py": {
      "file_path": "obsidian_concierge/utils/fs.py",
      "timestamp": "2025-04-09T21:36:39.534483",
      "structure": "# fs.py の解析結果\n\n## インポート一覧\n- `logging.logger` (✅ 使用あり)\n- `os` (❌ 未使用)\n- `pathlib.Path` (✅ 使用あり)\n- `shutil` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (❌ 未使用)\n- `typing.Set` (❌ 未使用)\n\n## 関数: `ensure_dir(path: str | Path [✅]) -> Path` [❌ 未使用]\n**Docstring**: Ensure a directory exists, creating it if necessary.\n\nArgs:\n    path: Directory path to ensure\n    \nReturns:\n    Path object of the ensured directory\n\n**内部で定義される名前:**\n- `ensure_dir`\n- `path`\n\n\n## 関数: `list_files(directory: str | Path [✅], pattern: str [✅], recursive: bool [✅]) -> List[Path]` [❌ 未使用]\n**Docstring**: List files in a directory matching a pattern.\n\nArgs:\n    directory: Directory to search in\n    pattern: Glob pattern to match files against\n    recursive: Whether to search recursively\n    \nReturns:\n    List of matching file paths\n    \nRaises:\n    FileNotFoundError: If directory doesn't exist\n\n**内部で定義される名前:**\n- `directory`\n- `list_files`\n\n\n## 関数: `safe_remove(path: str | Path [✅]) -> None` [❌ 未使用]\n**Docstring**: Safely remove a file or directory.\n\nArgs:\n    path: Path to remove\n\n**内部で定義される名前:**\n- `path`\n- `safe_remove`\n\n\n## 関数: `get_file_extension(path: str | Path [✅]) -> str` [❌ 未使用]\n**Docstring**: Get the extension of a file (lowercase).\n\nArgs:\n    path: File path\n    \nReturns:\n    Lowercase file extension without dot\n\n**内部で定義される名前:**\n- `get_file_extension`\n\n\n## 関数: `is_text_file(path: str | Path [✅], max_check_size: int [✅]) -> bool` [❌ 未使用]\n**Docstring**: Check if a file appears to be a text file.\n\nArgs:\n    path: File path to check\n    max_check_size: Maximum number of bytes to check\n    \nReturns:\n    True if file appears to be text, False otherwise\n\n**内部で定義される名前:**\n- `chunk`\n- `is_text_file`\n\n\n## 関数: `get_file_size(path: str | Path [✅]) -> int` [❌ 未使用]\n**Docstring**: Get the size of a file in bytes.\n\nArgs:\n    path: Path to the file\n    \nReturns:\n    File size in bytes\n    \nRaises:\n    FileNotFoundError: If file doesn't exist\n\n**内部で定義される名前:**\n- `get_file_size`\n- `path`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          }
        ]
      }
    },
    "obsidian_concierge/llm/ollama.py": {
      "file_path": "obsidian_concierge/llm/ollama.py",
      "timestamp": "2025-04-09T21:36:39.533457",
      "structure": "# ollama.py の解析結果\n\n## インポート一覧\n- `httpx` (✅ 使用あり)\n- `json` (❌ 未使用)\n- `logging` (✅ 使用あり)\n- `pydantic.BaseModel` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n\n## クラス: `GenerateRequest` (BaseModel)\n**Docstring**: Request model for text generation.\n\n## クラス: `OllamaClient`\n**Docstring**: Client for interacting with Ollama API.\n\n### メソッド: `__init__(self: Any [✅], base_url: str [✅], model: str [✅], timeout: float [✅]) -> None` [❌ 未使用]\n**Docstring**: Initialize Ollama client.\n\nArgs:\n    base_url: Ollama API base URL\n    model: Default model to use\n    timeout: Request timeout in seconds\n\n**内部で定義される名前:**\n- `__init__`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "obsidian_concierge/llm/ollama.py",
            "name": "OllamaClient",
            "type": "class",
            "issue": "too_long",
            "lines": 167,
            "limit": 100,
            "lineno": 25
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "obsidian_concierge/llm/ollama.py:80: error: Incompatible types in assignment (expression has type \"list[str]\", target has type \"float\")  [assignment]\nobsidian_concierge/llm/ollama.py:105: error: Returning Any from function declared to return \"str\"  [no-any-return]\nobsidian_concierge/llm/ollama.py:188: error: Returning Any from function declared to return \"list[float]\"  [no-any-return]\nFound 3 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "obsidian_concierge/main.py": {
      "file_path": "obsidian_concierge/main.py",
      "timestamp": "2025-04-09T21:36:39.533623",
      "structure": "# main.py の解析結果\n\n## インポート一覧\n- `fastapi.FastAPI` (✅ 使用あり)\n- `fastapi.middleware.cors.CORSMiddleware` (✅ 使用あり)\n- `utils.config.AppConfig` (❌ 未使用)\n- `utils.config.load_config` (✅ 使用あり)\n- `utils.logging.LogConfig` (✅ 使用あり)\n- `utils.logging.setup_logging` (✅ 使用あり)\n- `uvicorn` (✅ 使用あり)\n\n## 関数: `start() -> None` [✅ 使用あり]\n**Docstring**: Start the application server.\n\n**内部で定義される名前:**\n- `start`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "obsidian_concierge/main.py:43: error: Function is missing a return type annotation  [no-untyped-def]\nobsidian_concierge/main.py:48: error: Function is missing a return type annotation  [no-untyped-def]\nobsidian_concierge/main.py:48: note: Use \"-> None\" if function does not return a value\nFound 2 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "obsidian_concierge/core/search.py": {
      "file_path": "obsidian_concierge/core/search.py",
      "timestamp": "2025-04-09T21:36:39.533035",
      "structure": "# search.py の解析結果\n\n## インポート一覧\n- `db.chroma.ChromaRepository` (✅ 使用あり)\n- `db.chroma.Document` (❌ 未使用)\n- `logging` (✅ 使用あり)\n- `pydantic.BaseModel` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n\n## クラス: `SearchResult` (BaseModel)\n**Docstring**: Search result model.\n\n## クラス: `SearchService`\n**Docstring**: Service for searching documents in the vault.\n\n### メソッド: `__init__(self: Any [✅], repository: ChromaRepository [✅]) -> None` [❌ 未使用]\n**Docstring**: Initialize search service.\n\nArgs:\n    repository: ChromaRepository instance for vector search\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `_convert_filters(self: Any [❌], filters: Dict[str, Any] [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: Convert API filters to ChromaDB where conditions.\n\nArgs:\n    filters: Dictionary of filter conditions\n    \nReturns:\n    ChromaDB compatible where conditions\n\n**内部で定義される名前:**\n- `_convert_filters`\n- `folder`\n- `tags`\n- `where`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "obsidian_concierge/core/search.py:59: error: Argument \"n_results\" to \"query\" of \"ChromaRepository\" has incompatible type \"int | None\"; expected \"int\"  [arg-type]\nFound 1 error in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "obsidian_concierge/db/chroma.py": {
      "file_path": "obsidian_concierge/db/chroma.py",
      "timestamp": "2025-04-09T21:36:39.533146",
      "structure": "# chroma.py の解析結果\n\n## インポート一覧\n- `chromadb` (✅ 使用あり)\n- `chromadb.config.Settings` (✅ 使用あり)\n- `dataclasses.dataclass` (✅ 使用あり)\n- `logging` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n\n## クラス: `Document`\n**Docstring**: Represents a document in the vector store.\n\n## クラス: `ChromaRepository`\n**Docstring**: Repository for managing document vectors using ChromaDB.\n\n### メソッド: `__init__(self: Any [✅], collection_name: str [✅], persist_directory: str [✅], embedding_function: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Initialize ChromaDB repository.\n\nArgs:\n    collection_name: Name of the ChromaDB collection\n    persist_directory: Directory to persist vectors\n    embedding_function: Optional custom embedding function\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `add_documents(self: Any [✅], documents: List[Document] [✅]) -> None` [❌ 未使用]\n**Docstring**: Add documents to the vector store.\n\nArgs:\n    documents: List of Document objects to add\n\n**内部で定義される名前:**\n- `add_documents`\n- `contents`\n- `ids`\n- `metadatas`\n\n\n### メソッド: `query(self: Any [✅], query_text: str [✅], n_results: int [✅], where: Optional[Dict[str, Any]] [✅]) -> List[Document]` [✅ 使用あり]\n**Docstring**: Query the vector store for similar documents.\n\nArgs:\n    query_text: Text to search for\n    n_results: Maximum number of results to return\n    where: Optional metadata filter conditions\n    \nReturns:\n    List of matching Document objects\n\n**内部で定義される名前:**\n- `doc`\n- `documents`\n- `query`\n- `results`\n\n\n### メソッド: `delete_documents(self: Any [✅], ids: List[str] [✅]) -> None` [❌ 未使用]\n**Docstring**: Delete documents from the vector store.\n\nArgs:\n    ids: List of document IDs to delete\n\n**内部で定義される名前:**\n- `delete_documents`\n\n\n### メソッド: `update_document(self: Any [✅], document: Document [✅]) -> None` [❌ 未使用]\n**Docstring**: Update a document in the vector store.\n\nArgs:\n    document: Document object with updated content/metadata\n\n**内部で定義される名前:**\n- `update_document`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "obsidian_concierge/db/chroma.py",
            "name": "ChromaRepository",
            "type": "class",
            "issue": "too_long",
            "lines": 130,
            "limit": 100,
            "lineno": 22
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "obsidian_concierge/db/chroma.py:25: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nobsidian_concierge/db/chroma.py:73: error: Argument \"metadatas\" to \"add\" of \"Collection\" has incompatible type \"list[dict[str, Any]]\"; expected \"Mapping[str, str | int | float | bool] | list[Mapping[str, str | int | float | bool]] | None\"  [arg-type]\nobsidian_concierge/db/chroma.py:111: error: Value of type \"list[list[str]] | None\" is not indexable  [index]\nobsidian_concierge/db/chroma.py:112: error: Argument \"metadata\" to \"Document\" has incompatible type \"Mapping[str, str | int | float | bool]\"; expected \"dict[str, Any]\"  [arg-type]\nFound 4 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "obsidian_concierge/indexer/vault_indexer.py": {
      "file_path": "obsidian_concierge/indexer/vault_indexer.py",
      "timestamp": "2025-04-09T21:36:39.533332",
      "structure": "# vault_indexer.py の解析結果\n\n## インポート一覧\n- `datetime.datetime` (✅ 使用あり)\n- `db.chroma.ChromaRepository` (✅ 使用あり)\n- `db.chroma.Document` (✅ 使用あり)\n- `hashlib` (✅ 使用あり)\n- `os` (❌ 未使用)\n- `pathlib.Path` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.Generator` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `utils.config.config` (❌ 未使用)\n- `utils.fs.is_text_file` (✅ 使用あり)\n- `utils.fs.list_files` (✅ 使用あり)\n- `utils.logging.logger` (✅ 使用あり)\n\n## クラス: `VaultIndexer`\n**Docstring**: Class for indexing Obsidian vault contents.\n\n### メソッド: `__init__(self: Any [✅], vault_path: str [✅], repo: ChromaRepository [✅]) -> None` [❌ 未使用]\n**Docstring**: Initialize vault indexer.\n\nArgs:\n    vault_path: Path to Obsidian vault\n    repo: ChromaDB repository instance\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `_read_markdown_file(self: Any [❌], file_path: Path [✅]) -> str` [✅ 使用あり]\n**Docstring**: Read and preprocess markdown file content.\n\nArgs:\n    file_path: Path to markdown file\n    \nReturns:\n    Preprocessed file content\n\n**内部で定義される名前:**\n- `_read_markdown_file`\n- `content`\n\n\n### メソッド: `_generate_document_id(self: Any [✅], file_path: Path [✅]) -> str` [✅ 使用あり]\n**Docstring**: Generate unique document ID for a file.\n\nArgs:\n    file_path: Path to file\n    \nReturns:\n    Unique document ID\n\n**内部で定義される名前:**\n- `_generate_document_id`\n- `rel_path`\n\n\n### メソッド: `_get_file_metadata(self: Any [✅], file_path: Path [✅]) -> Dict[str, Any]` [✅ 使用あり]\n**Docstring**: Extract metadata from file.\n\nArgs:\n    file_path: Path to file\n    \nReturns:\n    File metadata\n\n**内部で定義される名前:**\n- `_get_file_metadata`\n- `rel_path`\n- `stat`\n\n\n### メソッド: `_scan_vault_files(self: Any [✅]) -> Generator[Path, None, None]` [✅ 使用あり]\n**Docstring**: Scan vault directory for markdown files.\n\nYields:\n    Paths to markdown files\n\n**内部で定義される名前:**\n- `_scan_vault_files`\n- `path`\n\n\n### メソッド: `index_vault(self: Any [✅], batch_size: int [✅]) -> None` [❌ 未使用]\n**Docstring**: Index all markdown files in the vault.\n\nArgs:\n    batch_size: Number of documents to process in each batch\n\n**内部で定義される名前:**\n- `batch`\n- `content`\n- `doc`\n- `index_vault`\n- `total_indexed`\n\n\n### メソッド: `reindex_file(self: Any [✅], file_path: str [✅]) -> None` [❌ 未使用]\n**Docstring**: Reindex a single file.\n\nArgs:\n    file_path: Path to file to reindex\n\n**内部で定義される名前:**\n- `content`\n- `doc`\n- `path`\n- `reindex_file`\n\n\n### メソッド: `remove_file(self: Any [✅], file_path: str [✅]) -> None` [❌ 未使用]\n**Docstring**: Remove a file from the index.\n\nArgs:\n    file_path: Path to file to remove\n\n**内部で定義される名前:**\n- `doc_id`\n- `path`\n- `remove_file`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "obsidian_concierge/indexer/vault_indexer.py",
            "name": "VaultIndexer",
            "type": "class",
            "issue": "too_long",
            "lines": 177,
            "limit": 100,
            "lineno": 20
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          }
        ]
      }
    },
    "tests/test_utils/test_config.py": {
      "file_path": "tests/test_utils/test_config.py",
      "timestamp": "2025-04-09T21:36:43.102519",
      "structure": "# test_config.py の解析結果\n\n## インポート一覧\n- `obsidian_concierge.utils.config.AppConfig` (✅ 使用あり)\n- `obsidian_concierge.utils.config.load_config` (✅ 使用あり)\n- `os` (✅ 使用あり)\n- `pathlib.Path` (❌ 未使用)\n- `pytest` (✅ 使用あり)\n- `yaml` (✅ 使用あり)\n\n## 関数: `@pytest.fixture config_file(tmp_path: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Fixture for temporary config file.\n\n**内部で定義される名前:**\n- `config_data`\n- `config_file`\n\n\n## 関数: `test_default_config() -> None` [❌ 未使用]\n**Docstring**: Test loading default configuration.\n\n**内部で定義される名前:**\n- `config`\n- `test_default_config`\n\n\n## 関数: `test_config_from_yaml(config_file: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test loading configuration from YAML file.\n\n**内部で定義される名前:**\n- `config`\n- `test_config_from_yaml`\n\n\n## 関数: `test_config_from_env() -> None` [❌ 未使用]\n**Docstring**: Test loading configuration from environment variables.\n\n**内部で定義される名前:**\n- `config`\n- `env_vars`\n- `test_config_from_env`\n\n\n## 関数: `test_invalid_config_file(tmp_path: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test handling of invalid YAML configuration file.\n\n**内部で定義される名前:**\n- `config_file`\n- `test_invalid_config_file`\n\n\n## 関数: `test_nonexistent_config_file() -> None` [❌ 未使用]\n**Docstring**: Test handling of nonexistent configuration file.\n\n**内部で定義される名前:**\n- `test_nonexistent_config_file`\n\n\n## 関数: `test_empty_config_file(tmp_path: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test handling of empty configuration file.\n\n**内部で定義される名前:**\n- `config`\n- `config_file`\n- `test_empty_config_file`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "tests/test_utils/test_config.py:7: error: Library stubs not installed for \"yaml\"  [import-untyped]\ntests/test_utils/test_config.py:7: note: Hint: \"python3 -m pip install types-PyYAML\"\ntests/test_utils/test_config.py:7: note: (or run \"mypy --install-types\" to install all missing stub packages)\ntests/test_utils/test_config.py:7: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\ntests/test_utils/test_config.py:14: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:37: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:37: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_config.py:61: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:78: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:78: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_config.py:109: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:118: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:118: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_config.py:124: error: Function is missing a type annotation  [no-untyped-def]\nFound 8 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "tests/test_utils/test_fs.py": {
      "file_path": "tests/test_utils/test_fs.py",
      "timestamp": "2025-04-09T21:36:43.207570",
      "structure": "# test_fs.py の解析結果\n\n## インポート一覧\n- `obsidian_concierge.utils.fs.ensure_dir` (✅ 使用あり)\n- `obsidian_concierge.utils.fs.get_file_extension` (✅ 使用あり)\n- `obsidian_concierge.utils.fs.get_file_size` (✅ 使用あり)\n- `obsidian_concierge.utils.fs.is_text_file` (✅ 使用あり)\n- `obsidian_concierge.utils.fs.list_files` (✅ 使用あり)\n- `obsidian_concierge.utils.fs.safe_remove` (✅ 使用あり)\n- `os` (❌ 未使用)\n- `pathlib.Path` (✅ 使用あり)\n- `pytest` (✅ 使用あり)\n- `tempfile.NamedTemporaryFile` (✅ 使用あり)\n- `tempfile.TemporaryDirectory` (✅ 使用あり)\n\n## 関数: `test_ensure_dir() -> None` [❌ 未使用]\n**Docstring**: Test directory creation.\n\n**内部で定義される名前:**\n- `result`\n- `test_dir`\n- `test_ensure_dir`\n\n\n## 関数: `test_list_files() -> None` [❌ 未使用]\n**Docstring**: Test file listing.\n\n**内部で定義される名前:**\n- `dir_path`\n- `files`\n- `nested_dir`\n- `test_list_files`\n\n\n## 関数: `test_safe_remove() -> None` [❌ 未使用]\n**Docstring**: Test safe file and directory removal.\n\n**内部で定義される名前:**\n- `test_dir`\n- `test_file`\n- `test_safe_remove`\n\n\n## 関数: `test_get_file_extension() -> None` [❌ 未使用]\n**Docstring**: Test file extension extraction.\n\n**内部で定義される名前:**\n- `test_get_file_extension`\n\n\n## 関数: `test_is_text_file() -> None` [❌ 未使用]\n**Docstring**: Test text file detection.\n\n**内部で定義される名前:**\n- `binary_file`\n- `test_is_text_file`\n- `text_file`\n\n\n## 関数: `test_get_file_size() -> None` [❌ 未使用]\n**Docstring**: Test file size calculation.\n\n**内部で定義される名前:**\n- `content`\n- `size`\n- `test_get_file_size`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "tests/test_utils/test_fs.py:16: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:16: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:27: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:27: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:52: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:52: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:72: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:72: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:81: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:81: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:97: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:97: note: Use \"-> None\" if function does not return a value\nFound 6 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "obsidian_concierge/core/qa.py": {
      "file_path": "obsidian_concierge/core/qa.py",
      "timestamp": "2025-04-09T21:36:39.532922",
      "structure": "# qa.py の解析結果\n\n## インポート一覧\n- `db.chroma.ChromaRepository` (✅ 使用あり)\n- `llm.ollama.OllamaClient` (✅ 使用あり)\n- `logging` (✅ 使用あり)\n- `pydantic.BaseModel` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (❌ 未使用)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n\n## クラス: `Source` (BaseModel)\n**Docstring**: Source document reference.\n\n## クラス: `QuestionResponse` (BaseModel)\n**Docstring**: Response model for question answering.\n\n## クラス: `QAService`\n**Docstring**: Service for answering questions using vault content.\n\n### メソッド: `__init__(self: Any [✅], repository: ChromaRepository [✅], llm_client: Optional[OllamaClient] [✅]) -> None` [❌ 未使用]\n**Docstring**: Initialize QA service.\n\nArgs:\n    repository: ChromaRepository instance for searching content\n    llm_client: Optional OllamaClient instance (creates new if None)\n\n**内部で定義される名前:**\n- `__init__`\n\n\n### メソッド: `_build_context(self: Any [❌], documents: List[Any] [✅]) -> str` [✅ 使用あり]\n**Docstring**: Build context string from documents.\n\nArgs:\n    documents: List of Document objects\n    \nReturns:\n    Formatted context string\n\n**内部で定義される名前:**\n- `_build_context`\n- `context_parts`\n- `title`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "obsidian_concierge/core/qa.py",
            "name": "QAService",
            "type": "class",
            "issue": "too_long",
            "lines": 111,
            "limit": 100,
            "lineno": 28
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          }
        ]
      }
    },
    "tests/test_db/test_chroma.py": {
      "file_path": "tests/test_db/test_chroma.py",
      "timestamp": "2025-04-09T21:36:42.123888",
      "structure": "# test_chroma.py の解析結果\n\n## インポート一覧\n- `obsidian_concierge.db.chroma.ChromaRepository` (✅ 使用あり)\n- `obsidian_concierge.db.chroma.Document` (✅ 使用あり)\n- `pytest` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `uuid` (✅ 使用あり)\n\n## 関数: `@pytest.fixture chroma_repo() -> None` [❌ 未使用]\n**Docstring**: Fixture for ChromaRepository instance.\n\n**内部で定義される名前:**\n- `chroma_repo`\n- `repo`\n\n\n## 関数: `@pytest.fixture sample_documents() -> List[Document]` [❌ 未使用]\n**Docstring**: Fixture for sample documents.\n\n**内部で定義される名前:**\n- `sample_documents`\n\n\n## 関数: `test_add_documents(chroma_repo: ChromaRepository [✅], sample_documents: List[Document] [✅]) -> None` [❌ 未使用]\n**Docstring**: Test adding documents to the repository.\n\n**内部で定義される名前:**\n- `stored_doc`\n- `test_add_documents`\n\n\n## 関数: `test_query_documents(chroma_repo: ChromaRepository [✅], sample_documents: List[Document] [✅]) -> None` [❌ 未使用]\n**Docstring**: Test querying documents by similarity.\n\n**内部で定義される名前:**\n- `results`\n- `test_query_documents`\n\n\n## 関数: `test_update_document(chroma_repo: ChromaRepository [✅], sample_documents: List[Document] [✅]) -> None` [❌ 未使用]\n**Docstring**: Test updating a document.\n\n**内部で定義される名前:**\n- `stored_doc`\n- `test_update_document`\n- `updated_doc`\n\n\n## 関数: `test_delete_documents(chroma_repo: ChromaRepository [✅], sample_documents: List[Document] [✅]) -> None` [❌ 未使用]\n**Docstring**: Test deleting documents.\n\n**内部で定義される名前:**\n- `test_delete_documents`\n\n\n## 関数: `test_get_nonexistent_document(chroma_repo: ChromaRepository [✅]) -> None` [❌ 未使用]\n**Docstring**: Test getting a nonexistent document.\n\n**内部で定義される名前:**\n- `test_get_nonexistent_document`\n\n\n## 関数: `test_empty_operations(chroma_repo: ChromaRepository [✅]) -> None` [❌ 未使用]\n**Docstring**: Test operations with empty inputs.\n\n**内部で定義される名前:**\n- `results`\n- `test_empty_operations`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "tests/test_db/test_chroma.py:13: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:43: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:50: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:57: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:76: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:90: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:96: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:105: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:106: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:107: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:110: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:112: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:115: error: Function is missing a return type annotation  [no-untyped-def]\nFound 13 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "tests/test_indexer/test_vault_indexer.py": {
      "file_path": "tests/test_indexer/test_vault_indexer.py",
      "timestamp": "2025-04-09T21:36:42.365453",
      "structure": "# test_vault_indexer.py の解析結果\n\n## インポート一覧\n- `obsidian_concierge.db.chroma.ChromaRepository` (✅ 使用あり)\n- `obsidian_concierge.db.chroma.Document` (❌ 未使用)\n- `obsidian_concierge.indexer.vault_indexer.VaultIndexer` (✅ 使用あり)\n- `os` (❌ 未使用)\n- `pathlib.Path` (❌ 未使用)\n- `pytest` (✅ 使用あり)\n- `typing.Generator` (❌ 未使用)\n- `unittest.mock.Mock` (✅ 使用あり)\n- `unittest.mock.patch` (❌ 未使用)\n\n## 関数: `@pytest.fixture mock_repo() -> None` [❌ 未使用]\n**Docstring**: Fixture for mock ChromaRepository.\n\n**内部で定義される名前:**\n- `mock_repo`\n\n\n## 関数: `@pytest.fixture temp_vault(tmp_path: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Fixture for temporary vault directory with sample files.\n\n**内部で定義される名前:**\n- `file_path`\n- `files`\n- `temp_vault`\n- `vault_dir`\n\n\n## 関数: `test_vault_indexer_initialization(temp_vault: Any [✅], mock_repo: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test VaultIndexer initialization.\n\n**内部で定義される名前:**\n- `indexer`\n- `test_vault_indexer_initialization`\n\n\n## 関数: `test_vault_indexer_invalid_path(mock_repo: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test VaultIndexer initialization with invalid path.\n\n**内部で定義される名前:**\n- `test_vault_indexer_invalid_path`\n\n\n## 関数: `test_read_markdown_file(temp_vault: Any [✅], mock_repo: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test reading markdown file content.\n\n**内部で定義される名前:**\n- `content`\n- `indexer`\n- `test_read_markdown_file`\n\n\n## 関数: `test_generate_document_id(temp_vault: Any [✅], mock_repo: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test document ID generation.\n\n**内部で定義される名前:**\n- `doc_id`\n- `file_path`\n- `indexer`\n- `other_path`\n- `test_generate_document_id`\n\n\n## 関数: `test_get_file_metadata(temp_vault: Any [✅], mock_repo: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test file metadata extraction.\n\n**内部で定義される名前:**\n- `file_path`\n- `indexer`\n- `metadata`\n- `test_get_file_metadata`\n\n\n## 関数: `test_scan_vault_files(temp_vault: Any [✅], mock_repo: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test scanning vault for markdown files.\n\n**内部で定義される名前:**\n- `file_paths`\n- `files`\n- `indexer`\n- `test_scan_vault_files`\n\n\n## 関数: `test_index_vault(temp_vault: Any [✅], mock_repo: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test indexing entire vault.\n\n**内部で定義される名前:**\n- `calls`\n- `indexer`\n- `test_index_vault`\n- `total_docs`\n\n\n## 関数: `test_reindex_file(temp_vault: Any [✅], mock_repo: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test reindexing a single file.\n\n**内部で定義される名前:**\n- `doc`\n- `file_path`\n- `indexer`\n- `test_reindex_file`\n\n\n## 関数: `test_remove_file(temp_vault: Any [✅], mock_repo: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test removing a file from index.\n\n**内部で定義される名前:**\n- `doc_id`\n- `file_path`\n- `indexer`\n- `test_remove_file`\n\n\n## 関数: `test_error_handling(temp_vault: Any [✅], mock_repo: Any [✅]) -> None` [❌ 未使用]\n**Docstring**: Test error handling during indexing.\n\n**内部で定義される名前:**\n- `indexer`\n- `test_error_handling`\n\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "tests/test_indexer/test_vault_indexer.py:16: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:22: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:37: error: \"str\" has no attribute \"parent\"  [attr-defined]\ntests/test_indexer/test_vault_indexer.py:38: error: \"str\" has no attribute \"write_text\"  [attr-defined]\ntests/test_indexer/test_vault_indexer.py:43: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:50: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:56: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:63: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:77: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:91: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:105: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:116: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:130: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:143: error: Function is missing a type annotation  [no-untyped-def]\nFound 14 errors in 1 file (checked 1 source file)\n"
          },
          {
            "check": "Banditセキュリティチェック",
            "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
          }
        ]
      }
    },
    "obsidian_concierge/services/qa.py": {
      "file_path": "obsidian_concierge/services/qa.py",
      "timestamp": "2025-04-09T21:36:39.533903",
      "structure": "# qa.py の解析結果\n\n## インポート一覧\n- `langchain.chains.LLMChain` (✅ 使用あり)\n- `langchain.chat_models.ChatOpenAI` (✅ 使用あり)\n- `langchain.prompts.ChatPromptTemplate` (✅ 使用あり)\n- `repository.chroma.ChromaRepository` (✅ 使用あり)\n- `typing.Any` (✅ 使用あり)\n- `typing.Dict` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n- `typing.Tuple` (✅ 使用あり)\n\n## クラス: `QAService`\n**Docstring**: Service for handling question answering operations.\n\n### メソッド: `__init__(self: Any [✅], repository: ChromaRepository [✅]) -> None` [❌ 未使用]\n**Docstring**: Initialize QAService.\n\nArgs:\n    repository: ChromaRepository instance for context retrieval\n\n**内部で定義される名前:**\n- `__init__`\n\n\n",
      "complexity": {
        "issues": [
          {
            "file": "obsidian_concierge/services/qa.py",
            "name": "QAService",
            "type": "class",
            "issue": "too_long",
            "lines": 151,
            "limit": 100,
            "lineno": 13
          }
        ],
        "issue_count": 1
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "obsidian_concierge/services/qa.py:8: error: Skipping analyzing \"obsidian_concierge.repository.chroma\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nobsidian_concierge/services/qa.py:8: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nobsidian_concierge/services/qa.py:24: error: \"None\" not callable  [misc]\nFound 2 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "obsidian_concierge/api/routes.py": {
      "file_path": "obsidian_concierge/api/routes.py",
      "timestamp": "2025-04-09T21:36:39.532780",
      "structure": "# routes.py の解析結果\n\n## インポート一覧\n- `fastapi.APIRouter` (✅ 使用あり)\n- `fastapi.HTTPException` (✅ 使用あり)\n- `fastapi.status` (✅ 使用あり)\n- `pydantic.BaseModel` (✅ 使用あり)\n- `pydantic.Field` (✅ 使用あり)\n- `repository.chroma.ChromaRepository` (✅ 使用あり)\n- `services.qa.QAService` (✅ 使用あり)\n- `services.search.SearchService` (✅ 使用あり)\n- `typing.List` (✅ 使用あり)\n- `typing.Optional` (✅ 使用あり)\n\n## クラス: `SearchRequest` (BaseModel)\n**Docstring**: Search request model.\n\n## クラス: `SearchResponse` (BaseModel)\n**Docstring**: Search response model.\n\n## クラス: `QuestionRequest` (BaseModel)\n**Docstring**: Question request model.\n\n## クラス: `QuestionResponse` (BaseModel)\n**Docstring**: Question response model.\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Ruffによるコードチェック",
            "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
          },
          {
            "check": "Mypy型チェック",
            "error": "obsidian_concierge/api/routes.py:13: error: Skipping analyzing \"obsidian_concierge.repository.chroma\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nobsidian_concierge/api/routes.py:13: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nobsidian_concierge/api/routes.py:91: error: \"QAService\" has no attribute \"answer_question\"  [attr-defined]\nFound 2 errors in 1 file (checked 1 source file)\n"
          }
        ]
      }
    },
    "obsidian_concierge/api/app.py": {
      "file_path": "obsidian_concierge/api/app.py",
      "timestamp": "2025-04-09T21:36:39.532460",
      "structure": "# app.py の解析結果\n\n## インポート一覧\n- `fastapi.FastAPI` (✅ 使用あり)\n- `fastapi.middleware.cors.CORSMiddleware` (✅ 使用あり)\n- `routes.router` (✅ 使用あり)\n\n",
      "complexity": {
        "issues": [],
        "issue_count": 0
      },
      "quality": {
        "passed": false,
        "issues": [
          {
            "check": "Mypy型チェック",
            "error": "obsidian_concierge/api/app.py:32: error: Function is missing a return type annotation  [no-untyped-def]\nFound 1 error in 1 file (checked 1 source file)\n"
          }
        ]
      }
    }
  },
  "quality_summary": {
    "passed": false,
    "issues": [
      {
        "check": "Ruffによるコードチェック",
        "error": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n"
      },
      {
        "check": "MypyによるPythonの型チェック",
        "error": "snippet/scripts/code_complexity_checker.py:12: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:22: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:28: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:44: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:51: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:102: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/scripts/code_complexity_checker.py:102: note: Use \"-> None\" if function does not return a value\nobsidian_concierge/services/search.py:8: error: Skipping analyzing \"obsidian_concierge.repository.chroma\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nsnippet/utils/input_sanitizer.py:183: error: Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"str\")  [assignment]\nsnippet/utils/input_sanitizer.py:185: error: Incompatible types in assignment (expression has type \"list[Any]\", target has type \"str\")  [assignment]\nsnippet/utils/input_sanitizer.py:209: error: Argument 1 to \"append\" of \"list\" has incompatible type \"dict[str, Any]\"; expected \"str\"  [arg-type]\nsnippet/utils/input_sanitizer.py:211: error: Argument 1 to \"append\" of \"list\" has incompatible type \"list[Any]\"; expected \"str\"  [arg-type]\nsnippet/utils/input_sanitizer.py:246: error: Incompatible types in assignment (expression has type \"str\", variable has type \"int\")  [assignment]\nsnippet/utils/logger/basic_usage.py:4: error: Cannot find implementation or library stub for module named \"contextual_logger\"  [import-not-found]\nsnippet/utils/logger/basic_usage.py:12: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:12: note: Use \"-> None\" if function does not return a value\nsnippet/utils/logger/basic_usage.py:29: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:29: note: Use \"-> None\" if function does not return a value\nsnippet/utils/logger/basic_usage.py:46: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:50: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:62: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:62: note: Use \"-> None\" if function does not return a value\nsnippet/utils/logger/basic_usage.py:66: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:73: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/basic_usage.py:73: note: Use \"-> None\" if function does not return a value\nsnippet/validator.py:329: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/snippet/validator.py:329: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:7: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:8: error: Need type annotation for \"ignored_patterns\" (hint: \"ignored_patterns: set[<type>] = ...\")  [var-annotated]\nsnippet/scripts/save_file_structure.py:22: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:29: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:31: error: Need type annotation for \"file_tree\"  [var-annotated]\nsnippet/scripts/save_file_structure.py:37: error: Unsupported target for indexed assignment (\"Collection[Any]\")  [index]\nsnippet/scripts/save_file_structure.py:38: error: Value of type \"Collection[Any]\" is not indexable  [index]\nsnippet/scripts/save_file_structure.py:39: error: \"Collection[Any]\" has no attribute \"append\"  [attr-defined]\nsnippet/scripts/save_file_structure.py:42: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:74: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/scripts/save_file_structure.py:74: note: Use \"-> None\" if function does not return a value\nsnippet/scripts/save_file_structure.py:114: error: Cannot find implementation or library stub for module named \"analyze_python_files\"  [import-not-found]\nsnippet/utils/exception_handler.py:16: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/exception_handler.py:34: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/exception_handler.py:36: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/exception_handler.py:72: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/exception_handler.py:77: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/config_manage.py:3: error: Library stubs not installed for \"yaml\"  [import-untyped]\nsnippet/utils/config_manage.py:21: error: Incompatible default for argument \"config_dir\" (default has type \"None\", argument has type \"str | Path\")  [assignment]\nsnippet/utils/config_manage.py:21: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsnippet/utils/config_manage.py:21: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsnippet/utils/config_manage.py:44: error: Need type annotation for \"_config\" (hint: \"_config: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/utils/config_manage.py:71: error: Need type annotation for \"merged_config\" (hint: \"merged_config: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/utils/config_manage.py:205: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nsnippet/scripts/analyze_python_files.py:51: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/scripts/analyze_python_files.py:86: error: Incompatible types in assignment (expression has type \"str\", variable has type \"alias\")  [assignment]\nsnippet/scripts/analyze_python_files.py:87: error: Argument 1 to <set> has incompatible type \"alias\"; expected \"str\"  [arg-type]\nsnippet/scripts/analyze_python_files.py:127: error: Incompatible types in assignment (expression has type \"str\", variable has type \"alias\")  [assignment]\nsnippet/scripts/analyze_python_files.py:159: error: Incompatible types in assignment (expression has type \"str\", variable has type \"alias\")  [assignment]\nsnippet/scripts/analyze_python_files.py:166: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/scripts/analyze_python_files.py:166: note: Use \"-> None\" if function does not return a value\nsnippet/scripts/analyze_python_files.py:190: error: Need type annotation for \"files_by_folder\" (hint: \"files_by_folder: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/test_data_generator.py:94: error: Need type annotation for \"custom_builders\" (hint: \"custom_builders: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/test_data_generator.py:96: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/test_data_generator.py:120: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/test_data_generator.py:151: error: Name \"get_logger\" is not defined  [name-defined]\nsnippet/test_data_generator.py:167: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/test_data_generator.py:191: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/test_data_generator.py:197: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/safe_file_ops.py:43: error: Returning Any from function declared to return \"str\"  [no-any-return]\nsnippet/utils/safe_file_ops.py:189: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nsnippet/utils/safe_file_ops.py:192: error: Returning Any from function declared to return \"dict[str, Any]\"  [no-any-return]\nsnippet/utils/safe_file_ops.py:238: error: Incompatible types in assignment (expression has type \"Reader\", variable has type \"DictReader[str]\")  [assignment]\nsnippet/utils/safe_file_ops.py:413: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:18: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:79: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:81: error: Item \"None\" of \"FrameType | None\" has no attribute \"f_back\"  [union-attr]\nsnippet/utils/logger/contextual_logger.py:81: error: Item \"None\" of \"FrameType | Any | None\" has no attribute \"f_back\"  [union-attr]\nsnippet/utils/logger/contextual_logger.py:82: error: Item \"None\" of \"FrameType | Any | None\" has no attribute \"f_code\"  [union-attr]\nsnippet/utils/logger/contextual_logger.py:83: error: Item \"None\" of \"FrameType | Any | None\" has no attribute \"f_code\"  [union-attr]\nsnippet/utils/logger/contextual_logger.py:84: error: Item \"None\" of \"FrameType | Any | None\" has no attribute \"f_lineno\"  [union-attr]\nsnippet/utils/logger/contextual_logger.py:94: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:108: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:121: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:125: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:129: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:133: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:140: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:147: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:155: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:158: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:173: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/utils/logger/contextual_logger.py:202: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/utils/__init__.py:7: error: Skipping analyzing \"snippet.utils.file_utils\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nsnippet/utils/__init__.py:9: error: Skipping analyzing \"snippet.utils.validator\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nsnippet/snippet/test_data_generator.py:94: error: Need type annotation for \"custom_builders\" (hint: \"custom_builders: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/snippet/test_data_generator.py:96: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/snippet/test_data_generator.py:120: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/snippet/test_data_generator.py:151: error: Name \"get_logger\" is not defined  [name-defined]\nsnippet/snippet/test_data_generator.py:167: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/snippet/test_data_generator.py:191: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/snippet/test_data_generator.py:197: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/analytics/validator_integration.py:21: error: Module \"typing\" has no attribute \"_GenericAlias\"; maybe \"GenericAlias\"?  [attr-defined]\nsnippet/analytics/validator_integration.py:24: error: Module \"typing\" has no attribute \"_SpecialGenericAlias\"  [attr-defined]\nsnippet/analytics/validator_integration.py:45: error: Need type annotation for \"issues\" (hint: \"issues: list[<type>] = ...\")  [var-annotated]\nsnippet/analytics/validator_integration.py:102: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/analytics/validator_integration.py:145: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/analytics/validator_integration.py:192: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/analytics/validator_integration.py:305: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/analytics/validator_integration.py:350: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsnippet/analytics/validator_integration.py:379: error: Name \"importlib\" is not defined  [name-defined]\nsnippet/analytics/validator_integration.py:380: error: Name \"importlib\" is not defined  [name-defined]\nsnippet/analytics/validator_integration.py:401: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:401: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:414: error: \"Sequence[str]\" has no attribute \"extend\"  [attr-defined]\nsnippet/analytics/validator_integration.py:415: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:415: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:421: error: \"Sequence[str]\" has no attribute \"extend\"  [attr-defined]\nsnippet/analytics/validator_integration.py:422: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:422: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:424: error: \"Sequence[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:431: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:431: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:434: error: \"Collection[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:455: error: \"Sequence[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:466: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:466: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:479: error: \"Sequence[str]\" has no attribute \"extend\"  [attr-defined]\nsnippet/analytics/validator_integration.py:480: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:480: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:487: error: \"Sequence[str]\" has no attribute \"extend\"  [attr-defined]\nsnippet/analytics/validator_integration.py:488: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:488: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:490: error: \"Sequence[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:497: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/validator_integration.py:497: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/validator_integration.py:500: error: \"Sequence[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:503: error: \"Collection[str]\" has no attribute \"append\"  [attr-defined]\nsnippet/analytics/validator_integration.py:508: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nobsidian_concierge/utils/config.py:12: error: Library stubs not installed for \"yaml\"  [import-untyped]\nobsidian_concierge/utils/config.py:12: note: Hint: \"python3 -m pip install types-PyYAML\"\nobsidian_concierge/utils/config.py:12: note: (or run \"mypy --install-types\" to install all missing stub packages)\nobsidian_concierge/utils/config.py:70: error: Need type annotation for \"config_data\" (hint: \"config_data: dict[<type>, <type>] = ...\")  [var-annotated]\nobsidian_concierge/utils/config.py:74: error: Incompatible types in assignment (expression has type \"Path\", variable has type \"str | None\")  [assignment]\nobsidian_concierge/utils/config.py:75: error: \"str\" has no attribute \"exists\"  [attr-defined]\nobsidian_concierge/utils/config.py:82: error: \"Callable[[BaseModel], dict[str, FieldInfo]]\" has no attribute \"__iter__\" (not iterable)  [attr-defined]\nobsidian_concierge/utils/config.py:87: error: Argument 1 to \"AppConfig\" has incompatible type \"**dict[Any, str]\"; expected \"int\"  [arg-type]\nsnippet/analytics/code_analyzer.py:14: error: Library stubs not installed for \"tqdm\"  [import-untyped]\nsnippet/analytics/code_analyzer.py:14: note: Hint: \"python3 -m pip install types-tqdm\"\nsnippet/analytics/code_analyzer.py:23: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/analytics/code_analyzer.py:23: error: All conditional function variants must have identical signatures  [misc]\nsnippet/analytics/code_analyzer.py:23: note: Original:\nsnippet/analytics/code_analyzer.py:23: note:     def run_check(command: list[str], description: str) -> tuple[bool, str]\nsnippet/analytics/code_analyzer.py:23: note: Redefinition:\nsnippet/analytics/code_analyzer.py:23: note:     def run_check(command: Any, description: Any) -> Any\nsnippet/analytics/code_analyzer.py:45: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/analytics/code_analyzer.py:47: error: Need type annotation for \"ignored_patterns\" (hint: \"ignored_patterns: set[<type>] = ...\")  [var-annotated]\nsnippet/analytics/code_analyzer.py:61: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/analytics/code_analyzer.py:109: error: Need type annotation for \"results\" (hint: \"results: dict[<type>, <type>] = ...\")  [var-annotated]\nsnippet/analytics/code_analyzer.py:152: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsnippet/analytics/code_analyzer.py:153: error: Value of type \"Collection[str]\" is not indexable  [index]\nsnippet/analytics/code_analyzer.py:236: error: Unsupported target for indexed assignment (\"object\")  [index]\nsnippet/analytics/code_analyzer.py:239: error: Unsupported target for indexed assignment (\"object\")  [index]\nsnippet/analytics/code_analyzer.py:250: error: Unsupported target for indexed assignment (\"object\")  [index]\nsnippet/analytics/code_analyzer.py:251: error: Value of type \"object\" is not indexable  [index]\nsnippet/cli.py:15: error: Library stubs not installed for \"tqdm\"  [import-untyped]\nsnippet/cli.py:28: error: Incompatible default for argument \"output_file\" (default has type \"None\", argument has type \"str\")  [assignment]\nsnippet/cli.py:28: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsnippet/cli.py:28: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsnippet/cli.py:215: error: Incompatible default for argument \"max_workers\" (default has type \"None\", argument has type \"int\")  [assignment]\nsnippet/cli.py:215: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsnippet/cli.py:215: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsnippet/cli.py:254: error: Unsupported target for indexed assignment (\"dict[str, int] | None\")  [index]\nsnippet/cli.py:254: error: Incompatible types in assignment (expression has type \"dict[str, Any]\", target has type \"int\")  [assignment]\nsnippet/cli.py:258: error: Value of type \"dict[str, int] | None\" is not indexable  [index]\nsnippet/cli.py:258: error: Unsupported target for indexed assignment (\"dict[str, int] | None\")  [index]\nsnippet/cli.py:259: error: Value of type \"dict[str, int] | None\" is not indexable  [index]\nsnippet/cli.py:259: error: Unsupported target for indexed assignment (\"dict[str, int] | None\")  [index]\nsnippet/cli.py:261: error: Unsupported target for indexed assignment (\"dict[str, int] | None\")  [index]\nsnippet/cli.py:265: error: Unsupported target for indexed assignment (\"dict[str, int] | None\")  [index]\nsnippet/cli.py:265: error: Incompatible types in assignment (expression has type \"dict[str, str]\", target has type \"int\")  [assignment]\nsnippet/cli.py:341: error: Incompatible types in assignment (expression has type \"Namespace\", variable has type \"list[str] | None\")  [assignment]\nsnippet/cli.py:344: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:344: error: Item \"None\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:345: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:345: error: Item \"None\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:352: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"max_lines\"  [union-attr]\nsnippet/cli.py:352: error: Item \"None\" of \"list[str] | None\" has no attribute \"max_lines\"  [union-attr]\nsnippet/cli.py:353: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"max_nest\"  [union-attr]\nsnippet/cli.py:353: error: Item \"None\" of \"list[str] | None\" has no attribute \"max_nest\"  [union-attr]\nsnippet/cli.py:360: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"max_lines\"  [union-attr]\nsnippet/cli.py:360: error: Item \"None\" of \"list[str] | None\" has no attribute \"max_lines\"  [union-attr]\nsnippet/cli.py:361: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"max_nest\"  [union-attr]\nsnippet/cli.py:361: error: Item \"None\" of \"list[str] | None\" has no attribute \"max_nest\"  [union-attr]\nsnippet/cli.py:362: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"skip_quality_checks\"  [union-attr]\nsnippet/cli.py:362: error: Item \"None\" of \"list[str] | None\" has no attribute \"skip_quality_checks\"  [union-attr]\nsnippet/cli.py:367: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"patterns\"  [union-attr]\nsnippet/cli.py:367: error: Item \"None\" of \"list[str] | None\" has no attribute \"patterns\"  [union-attr]\nsnippet/cli.py:368: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"recursive\"  [union-attr]\nsnippet/cli.py:368: error: Item \"None\" of \"list[str] | None\" has no attribute \"recursive\"  [union-attr]\nsnippet/cli.py:375: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"validate_functions\"  [union-attr]\nsnippet/cli.py:375: error: Item \"None\" of \"list[str] | None\" has no attribute \"validate_functions\"  [union-attr]\nsnippet/cli.py:384: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:384: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:392: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:392: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:393: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:393: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:396: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:396: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:399: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:399: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:400: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:400: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:405: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:405: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:406: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:406: error: Item \"None\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:409: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:409: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:409: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:409: error: Item \"None\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:435: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:435: error: Item \"None\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:436: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:436: error: Item \"None\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:441: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"test_count\"  [union-attr]\nsnippet/cli.py:441: error: Item \"None\" of \"list[str] | None\" has no attribute \"test_count\"  [union-attr]\nsnippet/cli.py:445: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:445: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:447: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:447: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:449: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:449: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:452: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:452: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:453: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:453: error: Item \"None\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:455: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:455: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:457: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:457: error: Item \"None\" of \"list[str] | None\" has no attribute \"report\"  [union-attr]\nsnippet/cli.py:477: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:477: error: Item \"None\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:481: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"code_analysis\"  [union-attr]\nsnippet/cli.py:481: error: Item \"None\" of \"list[str] | None\" has no attribute \"code_analysis\"  [union-attr]\nsnippet/cli.py:486: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"validator_results\"  [union-attr]\nsnippet/cli.py:486: error: Item \"None\" of \"list[str] | None\" has no attribute \"validator_results\"  [union-attr]\nsnippet/cli.py:487: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"validator_results\"  [union-attr]\nsnippet/cli.py:487: error: Item \"None\" of \"list[str] | None\" has no attribute \"validator_results\"  [union-attr]\nsnippet/cli.py:494: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:494: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:495: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:495: error: Item \"None\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:501: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:501: error: Item \"None\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:503: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"results\"  [union-attr]\nsnippet/cli.py:503: error: Item \"None\" of \"list[str] | None\" has no attribute \"results\"  [union-attr]\nsnippet/cli.py:504: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"results\"  [union-attr]\nsnippet/cli.py:504: error: Item \"None\" of \"list[str] | None\" has no attribute \"results\"  [union-attr]\nsnippet/cli.py:505: error: Name \"json\" is used before definition  [used-before-def]\nsnippet/cli.py:507: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:507: error: Item \"None\" of \"list[str] | None\" has no attribute \"output\"  [union-attr]\nsnippet/cli.py:507: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:507: error: Item \"None\" of \"list[str] | None\" has no attribute \"format\"  [union-attr]\nsnippet/cli.py:511: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:511: error: Item \"None\" of \"list[str] | None\" has no attribute \"command\"  [union-attr]\nsnippet/cli.py:513: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:513: error: Item \"None\" of \"list[str] | None\" has no attribute \"path\"  [union-attr]\nsnippet/cli.py:521: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"patterns\"  [union-attr]\nsnippet/cli.py:521: error: Item \"None\" of \"list[str] | None\" has no attribute \"patterns\"  [union-attr]\nsnippet/cli.py:522: error: Item \"list[str]\" of \"list[str] | None\" has no attribute \"recursive\"  [union-attr]\nsnippet/cli.py:522: error: Item \"None\" of \"list[str] | None\" has no attribute \"recursive\"  [union-attr]\nsnippet/testing/test_all.py:5: error: Library stubs not installed for \"yaml\"  [import-untyped]\nsnippet/testing/test_all.py:9: error: Skipping analyzing \"snippet.utils.logger.config_manage\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nsnippet/testing/test_all.py:12: error: Cannot find implementation or library stub for module named \"validator\"  [import-not-found]\nsnippet/testing/test_all.py:13: error: Cannot find implementation or library stub for module named \"test_data_generator\"  [import-not-found]\nsnippet/testing/test_all.py:14: error: Cannot find implementation or library stub for module named \"scripts.code_complexity_checker\"  [import-not-found]\nsnippet/testing/test_all.py:16: error: Cannot find implementation or library stub for module named \"logger.contextual_logger\"  [import-not-found]\nsnippet/testing/test_all.py:20: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:20: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:23: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:23: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:28: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:28: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:33: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:33: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:39: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:39: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:45: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:45: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:53: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:53: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:57: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:57: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:61: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:61: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:83: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:83: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:89: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:89: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:96: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:96: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:103: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:103: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:110: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:110: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:113: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:113: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:119: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:119: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:124: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:124: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:128: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:128: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:135: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:135: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:138: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:138: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:146: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:146: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:159: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:161: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:167: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:169: error: Function is missing a type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:177: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:177: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:181: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:181: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:185: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:185: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:198: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:198: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:233: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:233: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:237: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:237: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:248: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:248: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:259: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:259: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:272: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:272: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:294: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:294: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:299: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:299: note: Use \"-> None\" if function does not return a value\nsnippet/testing/test_all.py:300: error: Cannot find implementation or library stub for module named \"save_file_structure\"  [import-not-found]\nsnippet/testing/test_all.py:321: error: Function is missing a return type annotation  [no-untyped-def]\nsnippet/testing/test_all.py:321: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:16: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:16: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:27: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:27: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:52: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:52: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:72: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:72: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:81: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:81: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_fs.py:97: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_fs.py:97: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_config.py:7: error: Library stubs not installed for \"yaml\"  [import-untyped]\ntests/test_utils/test_config.py:14: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:37: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:37: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_config.py:61: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:78: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:78: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_config.py:109: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:118: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_utils/test_config.py:118: note: Use \"-> None\" if function does not return a value\ntests/test_utils/test_config.py:124: error: Function is missing a type annotation  [no-untyped-def]\nobsidian_concierge/main.py:43: error: Function is missing a return type annotation  [no-untyped-def]\nobsidian_concierge/main.py:48: error: Function is missing a return type annotation  [no-untyped-def]\nobsidian_concierge/main.py:48: note: Use \"-> None\" if function does not return a value\nobsidian_concierge/llm/ollama.py:80: error: Incompatible types in assignment (expression has type \"list[str]\", target has type \"float\")  [assignment]\nobsidian_concierge/llm/ollama.py:105: error: Returning Any from function declared to return \"str\"  [no-any-return]\nobsidian_concierge/llm/ollama.py:188: error: Returning Any from function declared to return \"list[float]\"  [no-any-return]\nobsidian_concierge/db/chroma.py:25: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nobsidian_concierge/db/chroma.py:73: error: Argument \"metadatas\" to \"add\" of \"Collection\" has incompatible type \"list[dict[str, Any]]\"; expected \"Mapping[str, str | int | float | bool] | list[Mapping[str, str | int | float | bool]] | None\"  [arg-type]\nobsidian_concierge/db/chroma.py:111: error: Value of type \"list[list[str]] | None\" is not indexable  [index]\nobsidian_concierge/db/chroma.py:112: error: Argument \"metadata\" to \"Document\" has incompatible type \"Mapping[str, str | int | float | bool]\"; expected \"dict[str, Any]\"  [arg-type]\ntests/test_db/test_chroma.py:13: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:43: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:50: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:57: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:76: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:90: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:96: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:105: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:106: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:107: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:110: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_db/test_chroma.py:112: error: \"ChromaRepository\" has no attribute \"get_document\"; maybe \"delete_documents\"?  [attr-defined]\ntests/test_db/test_chroma.py:115: error: Function is missing a return type annotation  [no-untyped-def]\nobsidian_concierge/core/search.py:59: error: Argument \"n_results\" to \"query\" of \"ChromaRepository\" has incompatible type \"int | None\"; expected \"int\"  [arg-type]\ntests/test_indexer/test_vault_indexer.py:16: error: Function is missing a return type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:22: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:37: error: \"str\" has no attribute \"parent\"  [attr-defined]\ntests/test_indexer/test_vault_indexer.py:38: error: \"str\" has no attribute \"write_text\"  [attr-defined]\ntests/test_indexer/test_vault_indexer.py:43: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:50: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:56: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:63: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:77: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:91: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:105: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:116: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:130: error: Function is missing a type annotation  [no-untyped-def]\ntests/test_indexer/test_vault_indexer.py:143: error: Function is missing a type annotation  [no-untyped-def]\nobsidian_concierge/services/qa.py:8: error: Skipping analyzing \"obsidian_concierge.repository.chroma\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nobsidian_concierge/services/qa.py:24: error: \"None\" not callable  [misc]\nobsidian_concierge/api/routes.py:13: error: Skipping analyzing \"obsidian_concierge.repository.chroma\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nobsidian_concierge/api/routes.py:13: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nobsidian_concierge/api/routes.py:91: error: \"QAService\" has no attribute \"answer_question\"  [attr-defined]\nobsidian_concierge/api/app.py:32: error: Function is missing a return type annotation  [no-untyped-def]\nFound 350 errors in 31 files (checked 48 source files)\n"
      },
      {
        "check": "Pytestによるテスト実行",
        "error": "============================= test session starts ==============================\nplatform linux -- Python 3.11.11, pytest-8.3.5, pluggy-1.5.0\nrootdir: /home/persona/analysis/Obsidian-Concierge\nconfigfile: pyproject.toml\nplugins: anyio-4.9.0, asyncio-0.23.8\nasyncio: mode=Mode.STRICT\ncollected 28 items / 1 error\n\n==================================== ERRORS ====================================\n_________________ ERROR collecting snippet/testing/test_all.py _________________\nImportError while importing test module '/home/persona/analysis/Obsidian-Concierge/snippet/testing/test_all.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n../../.pyenv/versions/3.11.11/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\nsnippet/testing/test_all.py:9: in <module>\n    from snippet.utils.logger.config_manage import ConfigManager\nsnippet/utils/__init__.py:7: in <module>\n    from .file_utils import SafeFileOps, FileStructureAnalyzer, FileUtils\nE   ModuleNotFoundError: No module named 'snippet.utils.file_utils'\n=============================== warnings summary ===============================\nobsidian_concierge/utils/config.py:82\n  /home/persona/analysis/Obsidian-Concierge/obsidian_concierge/utils/config.py:82: PydanticDeprecatedSince20: The `__fields__` attribute is deprecated, use `model_fields` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    for field in AppConfig.__fields__:\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR snippet/testing/test_all.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n========================= 1 warning, 1 error in 4.46s ==========================\n"
      },
      {
        "check": "Banditによるセキュリティチェック",
        "error": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[main]\tINFO\trunning on Python 3.11.11\n"
      }
    ]
  },
  "summary": {
    "total_files": 48,
    "complexity_issues": 33,
    "files_with_issues": 18,
    "quality_checks_passed": false,
    "most_complex_files": [
      {
        "file": "snippet/analytics/validator_integration.py",
        "issues": 6
      },
      {
        "file": "snippet/cli.py",
        "issues": 5
      },
      {
        "file": "snippet/scripts/analyze_python_files.py",
        "issues": 3
      },
      {
        "file": "snippet/utils/config_manage.py",
        "issues": 3
      },
      {
        "file": "snippet/analytics/report_generator.py",
        "issues": 3
      }
    ]
  }
}